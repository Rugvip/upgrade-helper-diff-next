diff --git a/app-config.yaml b/app-config.yaml
index 269756c..19f3819 100644
--- a/app-config.yaml
+++ b/app-config.yaml
@@ -39,9 +39,9 @@ proxy:
 techdocs:
-  storageUrl: http://localhost:7000/api/techdocs/static/docs
   requestUrl: http://localhost:7000/api/techdocs
+  storageUrl: http://localhost:7000/api/techdocs/static/docs
+  builder: 'local'
   generators:
     techdocs: 'docker'
-
-lighthouse:
-  baseUrl: http://localhost:3003
+  publisher:
+    type: 'local'
 
diff --git a/package.json b/package.json
index 45fedb5..a6bc053 100644
--- a/package.json
+++ b/package.json
@@ -9,2 +9,3 @@
     "start": "yarn workspace app start",
+    "start-backend": "yarn workspace backend start",
     "build": "lerna run build",
@@ -29,3 +30,3 @@
   "devDependencies": {
-    "@backstage/cli": "^0.3.0",
+    "@backstage/cli": "^0.4.6",
     "@spotify/prettier-config": "^7.0.0",
@@ -34,5 +35,2 @@
   },
-  "resolutions": {
-    "esbuild": "0.6.3"
-  },
   "prettier": "@spotify/prettier-config",
diff --git a/packages/app/package.json b/packages/app/package.json
index 82cb01b..ba052c9 100644
--- a/packages/app/package.json
+++ b/packages/app/package.json
@@ -8,18 +8,17 @@
     "@material-ui/icons": "^4.9.1",
-    "@backstage/cli": "^0.3.0",
-    "@backstage/core": "^0.3.1",
-    "@backstage/plugin-api-docs": "^0.2.1",
-    "@backstage/plugin-catalog": "^0.2.2",
-    "@backstage/plugin-register-component": "^0.2.1",
-    "@backstage/plugin-scaffolder": "^0.3.0",
-    "@backstage/plugin-techdocs": "^0.2.2",
-    "@backstage/catalog-model": "^0.2.0",
-    "@backstage/plugin-circleci": "^0.2.1",
-    "@backstage/plugin-explore": "^0.2.1",
-    "@backstage/plugin-lighthouse": "^0.2.2",
-    "@backstage/plugin-tech-radar": "^0.3.0",
-    "@backstage/plugin-github-actions": "^0.2.1",
-    "@backstage/plugin-user-settings": "^0.2.2",
-    "@backstage/test-utils": "^0.1.3",
-    "@backstage/theme": "^0.2.1",
+    "@backstage/cli": "^0.4.6",
+    "@backstage/core": "^0.4.4",
+    "@backstage/plugin-api-docs": "^0.4.2",
+    "@backstage/plugin-catalog": "^0.2.11",
+    "@backstage/plugin-catalog-import": "^0.3.4",
+    "@backstage/plugin-scaffolder": "^0.3.6",
+    "@backstage/plugin-techdocs": "^0.5.3",
+    "@backstage/catalog-model": "^0.6.1",
+    "@backstage/plugin-circleci": "^0.2.5",
+    "@backstage/plugin-tech-radar": "^0.3.2",
+    "@backstage/plugin-github-actions": "^0.2.7",
+    "@backstage/plugin-user-settings": "^0.2.3",
+    "@backstage/plugin-search": "^0.2.5",
+    "@backstage/test-utils": "^0.1.6",
+    "@backstage/theme": "^0.2.2",
     "history": "^5.0.0",
@@ -48,2 +47,3 @@
     "lint": "backstage-cli lint",
+    "clean": "backstage-cli clean",
     "test:e2e": "cross-env PORT=3001 start-server-and-test start http://localhost:3001 cy:dev",
@@ -64,3 +64,6 @@
     ]
-  }
+  },
+  "files": [
+    "dist"
+  ]
 }
diff --git a/packages/app/src/App.tsx b/packages/app/src/App.tsx
index 9449ac6..693e66e 100644
--- a/packages/app/src/App.tsx
+++ b/packages/app/src/App.tsx
@@ -1,2 +1,2 @@
-import React, { FC } from 'react';
+import React from 'react';
 import {
@@ -14,4 +14,5 @@ import { Router as CatalogRouter } from '@backstage/plugin-catalog';
 import { Router as DocsRouter } from '@backstage/plugin-techdocs';
-import { Router as RegisterComponentRouter } from '@backstage/plugin-register-component';
+import { Router as ImportComponentRouter } from '@backstage/plugin-catalog-import';
 import { Router as TechRadarRouter } from '@backstage/plugin-tech-radar';
+import { SearchPage as SearchRouter } from '@backstage/plugin-search';
 
@@ -34,3 +35,3 @@ const catalogRouteRef = createRouteRef({
 
-const App: FC<{}> = () => (
+const App = () => (
   <AppProvider>
@@ -53,4 +54,8 @@ const App: FC<{}> = () => (
           <Route
-            path="/register-component"
-            element={<RegisterComponentRouter catalogRouteRef={catalogRouteRef} />}
+            path="/catalog-import"
+            element={<ImportComponentRouter catalogRouteRef={catalogRouteRef} />}
+          />
+          <Route
+            path="/search"
+            element={<SearchRouter/>}
           />
diff --git a/packages/app/src/LogoFull.tsx b/packages/app/src/LogoFull.tsx
index d2b1bf1..2fb7674 100644
--- a/packages/app/src/LogoFull.tsx
+++ b/packages/app/src/LogoFull.tsx
@@ -16,3 +16,3 @@
 
-import React, { FC } from 'react';
+import React from 'react';
 import { makeStyles } from '@material-ui/core';
@@ -28,3 +28,3 @@ const useStyles = makeStyles({
 });
-const LogoFull: FC<{}> = () => {
+const LogoFull = () => {
   const classes = useStyles();
diff --git a/packages/app/src/LogoIcon.tsx b/packages/app/src/LogoIcon.tsx
index d70be3d..507e47d 100644
--- a/packages/app/src/LogoIcon.tsx
+++ b/packages/app/src/LogoIcon.tsx
@@ -16,3 +16,3 @@
 
-import React, { FC } from 'react';
+import React from 'react';
 import { makeStyles } from '@material-ui/core';
@@ -29,3 +29,3 @@ const useStyles = makeStyles({
 
-const LogoIcon: FC<{}> = () => {
+const LogoIcon = () => {
   const classes = useStyles();
diff --git a/packages/app/src/components/catalog/EntityPage.tsx b/packages/app/src/components/catalog/EntityPage.tsx
index 7d65b32..b5e384f 100644
--- a/packages/app/src/components/catalog/EntityPage.tsx
+++ b/packages/app/src/components/catalog/EntityPage.tsx
@@ -15,22 +15,25 @@
  */
+import { ApiEntity, Entity } from '@backstage/catalog-model';
+import { WarningPanel } from '@backstage/core';
 import {
-  Router as GitHubActionsRouter,
-  isPluginApplicableToEntity as isGitHubActionsAvailable,
-} from '@backstage/plugin-github-actions';
+  ApiDefinitionCard,
+  ConsumedApisCard, 
+  ConsumingComponentsCard, 
+  ProvidedApisCard, 
+  ProvidingComponentsCard
+} from '@backstage/plugin-api-docs';
+import {
+  AboutCard, EntityPageLayout,
+  useEntity
+} from '@backstage/plugin-catalog';
 import {
-  Router as CircleCIRouter,
-  isPluginApplicableToEntity as isCircleCIAvailable,
+  isPluginApplicableToEntity as isCircleCIAvailable, Router as CircleCIRouter
 } from '@backstage/plugin-circleci';
-import { Router as ApiDocsRouter } from '@backstage/plugin-api-docs';
-import { EmbeddedDocsRouter as DocsRouter } from '@backstage/plugin-techdocs';
-
-import React from 'react';
 import {
-  EntityPageLayout,
-  useEntity,
-  AboutCard,
-} from '@backstage/plugin-catalog';
-import { Entity } from '@backstage/catalog-model';
+  isPluginApplicableToEntity as isGitHubActionsAvailable, Router as GitHubActionsRouter
+} from '@backstage/plugin-github-actions';
+import { EmbeddedDocsRouter as DocsRouter } from '@backstage/plugin-techdocs';
 import { Grid } from '@material-ui/core';
-import { WarningPanel } from '@backstage/core';
+import React from 'react';
+
 
@@ -62,2 +65,13 @@ const OverviewContent = ({ entity }: { entity: Entity }) => (
 
+const ComponentApisContent = ({ entity }: { entity: Entity }) => (
+  <Grid container spacing={3} alignItems="stretch">
+    <Grid item md={6}>
+      <ProvidedApisCard entity={entity} />
+    </Grid>
+    <Grid item md={6}>
+      <ConsumedApisCard entity={entity} />
+    </Grid>
+  </Grid>
+);
+
 const ServiceEntityPage = ({ entity }: { entity: Entity }) => (
@@ -77,3 +91,3 @@ const ServiceEntityPage = ({ entity }: { entity: Entity }) => (
       title="API"
-      element={<ApiDocsRouter entity={entity} />}
+      element={<ComponentApisContent entity={entity} />}
     />
@@ -122,4 +136,3 @@ const DefaultEntityPage = ({ entity }: { entity: Entity }) => (
 
-export const EntityPage = () => {
-  const { entity } = useEntity();
+export const ComponentEntityPage = ({ entity }: { entity: Entity }) => {
   switch (entity?.spec?.type) {
@@ -133 +146,53 @@ export const EntityPage = () => {
 };
+
+const ApiOverviewContent = ({ entity }: { entity: Entity }) => (
+  <Grid container spacing={3}>
+    <Grid item md={6}>
+      <AboutCard entity={entity} />
+    </Grid>
+    <Grid container item md={12}>
+      <Grid item md={6}>
+        <ProvidingComponentsCard entity={entity} />
+      </Grid>
+      <Grid item md={6}>
+        <ConsumingComponentsCard entity={entity} />
+      </Grid>
+    </Grid>
+  </Grid>
+);
+
+const ApiDefinitionContent = ({ entity }: { entity: ApiEntity }) => (
+  <Grid container spacing={3}>
+    <Grid item xs={12}>
+      <ApiDefinitionCard apiEntity={entity} />
+    </Grid>
+  </Grid>
+);
+
+const ApiEntityPage = ({ entity }: { entity: Entity }) => (
+  <EntityPageLayout>
+    <EntityPageLayout.Content
+      path="/*"
+      title="Overview"
+      element={<ApiOverviewContent entity={entity} />}
+    />
+    <EntityPageLayout.Content
+      path="/definition/*"
+      title="Definition"
+      element={<ApiDefinitionContent entity={entity as ApiEntity} />}
+    />
+  </EntityPageLayout>
+);
+
+export const EntityPage = () => {
+  const { entity } = useEntity();
+
+  switch (entity?.kind?.toLowerCase()) {
+    case 'component':
+      return <ComponentEntityPage entity={entity} />;
+    case 'api':
+      return <ApiEntityPage entity={entity} />;
+    default:
+      return <DefaultEntityPage entity={entity} />;
+  }
+};
diff --git a/packages/app/src/plugins.ts b/packages/app/src/plugins.ts
index b719594..d3c9d6e 100644
--- a/packages/app/src/plugins.ts
+++ b/packages/app/src/plugins.ts
@@ -2,9 +2,7 @@ export { plugin as ApiDocs } from '@backstage/plugin-api-docs';
 export { plugin as CatalogPlugin } from '@backstage/plugin-catalog';
-export { plugin as RegisterComponent } from '@backstage/plugin-register-component';
+export { plugin as CatalogImport } from '@backstage/plugin-catalog-import';
+export { plugin as Circleci } from '@backstage/plugin-circleci';
+export { plugin as GithubActions } from '@backstage/plugin-github-actions';
 export { plugin as ScaffolderPlugin } from '@backstage/plugin-scaffolder';
 export { plugin as TechDocsPlugin } from '@backstage/plugin-techdocs';
-export { plugin as Explore } from '@backstage/plugin-explore';
-export { plugin as Circleci } from '@backstage/plugin-circleci';
-export { plugin as LighthousePlugin } from '@backstage/plugin-lighthouse';
 export { plugin as TechRadar } from '@backstage/plugin-tech-radar';
-export { plugin as GithubActions } from '@backstage/plugin-github-actions';
diff --git a/packages/app/src/sidebar.tsx b/packages/app/src/sidebar.tsx
index 9013476..55fa056 100644
--- a/packages/app/src/sidebar.tsx
+++ b/packages/app/src/sidebar.tsx
@@ -1,7 +1,6 @@
-import React, { FC, useContext } from 'react';
+import React, { useContext } from 'react';
 import HomeIcon from '@material-ui/icons/Home';
 import LibraryBooks from '@material-ui/icons/LibraryBooks';
+import ExtensionIcon from '@material-ui/icons/Extension';
 import CreateComponentIcon from '@material-ui/icons/AddCircleOutline';
-import BuildIcon from '@material-ui/icons/BuildRounded';
-import RuleIcon from '@material-ui/icons/AssignmentTurnedIn';
 import MapIcon from '@material-ui/icons/MyLocation';
@@ -21,2 +20,3 @@ import {
 } from '@backstage/core';
+import { SidebarSearch } from '@backstage/plugin-search';
 
@@ -25,2 +25,3 @@ export const AppSidebar = () => (
     <SidebarLogo />
+    <SidebarSearch />
     <SidebarDivider />
@@ -28,2 +29,3 @@ export const AppSidebar = () => (
     <SidebarItem icon={HomeIcon} to="./" text="Home" />
+    <SidebarItem icon={ExtensionIcon} to="api-docs" text="APIs" />
     <SidebarItem icon={LibraryBooks} to="/docs" text="Docs" />
@@ -32,4 +34,2 @@ export const AppSidebar = () => (
     <SidebarItem icon={MapIcon} to="tech-radar" text="Tech Radar" />
-    <SidebarItem icon={RuleIcon} to="lighthouse" text="Lighthouse" />
-    <SidebarItem icon={BuildIcon} to="circleci" text="CircleCI" />
     {/* End global nav */}
@@ -57,3 +57,3 @@ const useSidebarLogoStyles = makeStyles({
 
-const SidebarLogo: FC<{}> = () => {
+const SidebarLogo = () => {
   const classes = useSidebarLogoStyles();
diff --git a/packages/backend/Dockerfile b/packages/backend/Dockerfile
index 0fcd23f..5051471 100644
--- a/packages/backend/Dockerfile
+++ b/packages/backend/Dockerfile
@@ -9,3 +9,3 @@ ADD yarn.lock package.json skeleton.tar ./
 
-RUN yarn install --frozen-lockfile --production
+RUN yarn install --frozen-lockfile --production --network-timeout 300000 && rm -rf "$(yarn cache dir)"
 
diff --git a/packages/backend/package.json b/packages/backend/package.json
index f4d955b..7a75e78 100644
--- a/packages/backend/package.json
+++ b/packages/backend/package.json
@@ -20,15 +20,14 @@
     "app": "0.0.0",
-    "@backstage/backend-common": "^0.3.0",
-    "@backstage/catalog-model": "^0.2.0",
-    "@backstage/config": "^0.1.1",
-    "@backstage/plugin-app-backend": "^0.3.0",
-    "@backstage/plugin-auth-backend": "^0.2.2",
-    "@backstage/plugin-catalog-backend": "^0.2.1",
-    "@backstage/plugin-proxy-backend": "^0.2.1",
-    "@backstage/plugin-rollbar-backend": "^0.1.3",
-    "@backstage/plugin-scaffolder-backend": "^0.3.1",
-    "@backstage/plugin-techdocs-backend": "^0.2.1",
-    "@octokit/rest": "^18.0.0",
-    "@gitbeaker/node": "^25.2.0",
-    "dockerode": "^3.2.0",
+    "@backstage/backend-common": "^0.4.3",
+    "@backstage/catalog-model": "^0.6.1",
+    "@backstage/config": "^0.1.2",
+    "@backstage/plugin-app-backend": "^0.3.3",
+    "@backstage/plugin-auth-backend": "^0.2.10",
+    "@backstage/plugin-catalog-backend": "^0.5.3",
+    "@backstage/plugin-proxy-backend": "^0.2.3",
+    "@backstage/plugin-scaffolder-backend": "^0.4.1",
+    "@backstage/plugin-techdocs-backend": "^0.5.3",
+    "@gitbeaker/node": "^28.0.2",
+    "@octokit/rest": "^18.0.12",
+    "dockerode": "^3.2.1",
     "express": "^4.17.1",
@@ -36,3 +35,3 @@
     "knex": "^0.21.6",
-    "sqlite3": "^4.2.0",
+    "sqlite3": "^5.0.0",
     "winston": "^3.2.1"
@@ -40,4 +39,4 @@
   "devDependencies": {
-    "@backstage/cli": "^0.3.0",
-    "@types/dockerode": "^2.5.32",
+    "@backstage/cli": "^0.4.6",
+    "@types/dockerode": "^3.2.1",
     "@types/express": "^4.17.6",
@@ -45,3 +44,6 @@
     "@types/helmet": "^0.0.47"
-  }
+  },
+  "files": [
+    "dist"
+  ]
 }
diff --git a/packages/backend/src/plugins/techdocs.ts b/packages/backend/src/plugins/techdocs.ts
index ac4d81a..5c7ec50 100644
--- a/packages/backend/src/plugins/techdocs.ts
+++ b/packages/backend/src/plugins/techdocs.ts
@@ -2,8 +2,5 @@ import {
   createRouter,
-  DirectoryPreparer,
-  CommonGitPreparer,
   Preparers,
   Generators,
-  LocalPublish,
-  TechdocsGenerator,
+  Publisher,
 } from '@backstage/plugin-techdocs-backend';
@@ -16,18 +13,24 @@ export default async function createPlugin({
   discovery,
+  reader,
 }: PluginEnvironment) {
-  const generators = new Generators();
-  const techdocsGenerator = new TechdocsGenerator(logger, config);
-
-  generators.register('techdocs', techdocsGenerator);
-
-  const preparers = new Preparers();
-  const directoryPreparer = new DirectoryPreparer(logger);
-  const commonGitPreparer = new CommonGitPreparer(logger);
+  // Preparers are responsible for fetching source files for documentation.
+  const preparers = await Preparers.fromConfig(config, {
+    logger,
+    reader,
+  });
 
-  preparers.register('dir', directoryPreparer);
-  preparers.register('github', commonGitPreparer);
-  preparers.register('gitlab', commonGitPreparer);
+  // Generators are used for generating documentation sites.
+  const generators = await Generators.fromConfig(config, {
+    logger,
+  });
 
-  const publisher = new LocalPublish(logger, discovery);
+  // Publisher is used for
+  // 1. Publishing generated files to storage
+  // 2. Fetching files from storage and passing them to TechDocs frontend.
+  const publisher = await Publisher.fromConfig(config, {
+    logger,
+    discovery,
+  });
 
+  // Docker client (conditionally) used by the generators, based on techdocs.generators config.
   const dockerClient = new Docker();
