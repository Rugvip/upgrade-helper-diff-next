diff --git a/.gitignore b/.gitignore
index 4adebc5..d16a8d3 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1 +1,4 @@
+# macOS
+.DS_Store
+
 # Logs
diff --git a/.prettierignore b/.prettierignore
new file mode 100644
index 0000000..dfb0f1c
--- /dev/null
+++ b/.prettierignore
@@ -0,0 +1,4 @@
+dist
+dist-types
+coverage
+.vscode
diff --git a/README.md b/README.md
index 07cf6fd..8c7c437 100644
--- a/README.md
+++ b/README.md
@@ -9,2 +9,2 @@ yarn install
 yarn dev
-```
\ No newline at end of file
+```
diff --git a/app-config.production.yaml b/app-config.production.yaml
index 92f4574..5e36c23 100644
--- a/app-config.production.yaml
+++ b/app-config.production.yaml
@@ -2,7 +2,7 @@ app:
   # Should be the same as backend.baseUrl when using the `app-backend` plugin
-  baseUrl: http://localhost:7000
+  baseUrl: http://localhost:7007
 
 backend:
-  baseUrl: http://localhost:7000
+  baseUrl: http://localhost:7007
   listen:
-    port: 7000
+    port: 7007
diff --git a/app-config.yaml b/app-config.yaml
index 6c3df07..2999615 100644
--- a/app-config.yaml
+++ b/app-config.yaml
@@ -8,7 +8,14 @@ organization:
 backend:
-  baseUrl: http://localhost:7000
+  # Used for enabling authentication, secret is shared by all backend plugins
+  # See backend-to-backend-auth.md in the docs for information on the format
+  # auth:
+  #   keys:
+  #     - secret: ${BACKEND_SECRET}
+  baseUrl: http://localhost:7007
   listen:
-    port: 7000
+    port: 7007
   csp:
     connect-src: ["'self'", 'http:', 'https:']
+    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
+    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
   cors:
@@ -44,4 +51,4 @@ techdocs:
   builder: 'local' # Alternatives - 'external'
-  generators:
-    techdocs: 'docker' # Alternatives - 'local'
+  generator:
+    runIn: 'docker' # Alternatives - 'local'
   publisher:
@@ -84,3 +91,3 @@ catalog:
     - type: url
-      target: https://github.com/backstage/backstage/blob/master/plugins/scaffolder-backend/sample-templates/react-ssr-template/template.yaml
+      target: https://github.com/backstage/software-templates/blob/main/scaffolder-templates/react-ssr-template/template.yaml
       rules:
@@ -88,7 +95,3 @@ catalog:
     - type: url
-      target: https://github.com/backstage/backstage/blob/master/plugins/scaffolder-backend/sample-templates/springboot-grpc-template/template.yaml
-      rules:
-        - allow: [Template]
-    - type: url
-      target: https://github.com/backstage/backstage/blob/master/plugins/scaffolder-backend/sample-templates/create-react-app/template.yaml
+      target: https://github.com/backstage/software-templates/blob/main/scaffolder-templates/springboot-grpc-template/template.yaml
       rules:
@@ -100,3 +103,3 @@ catalog:
     - type: url
-      target: https://github.com/backstage/backstage/blob/master/plugins/scaffolder-backend/sample-templates/docs-template/template.yaml
+      target: https://github.com/backstage/software-templates/blob/main/scaffolder-templates/docs-template/template.yaml
       rules:
diff --git a/backstage.json b/backstage.json
new file mode 100644
index 0000000..1062ff8
--- /dev/null
+++ b/backstage.json
@@ -0,0 +1,3 @@
+{
+  "version": "0.4.6"
+}
diff --git a/catalog-info.yaml b/catalog-info.yaml
index 841a480..adeb66d 100644
--- a/catalog-info.yaml
+++ b/catalog-info.yaml
@@ -7,4 +7,4 @@ metadata:
   # annotations:
-    # github.com/project-slug: backstage/backstage
-    # backstage.io/techdocs-ref: url:https://github.com/backstage/backstage
+  #   github.com/project-slug: backstage/backstage
+  #   backstage.io/techdocs-ref: dir:.
 spec:
diff --git a/package.json b/package.json
index 51c6d41..95de0a0 100644
--- a/package.json
+++ b/package.json
@@ -5,3 +5,3 @@
   "engines": {
-    "node": "12 || 14"
+    "node": "14 || 16"
   },
@@ -17,3 +17,3 @@
     "diff": "lerna run diff --",
-    "test": "lerna run test --since origin/master -- --coverage",
+    "test": "backstage-cli test",
     "test:all": "lerna run test -- --coverage",
@@ -21,9 +21,6 @@
     "lint:all": "lerna run lint --",
-    "create-plugin": "backstage-cli create-plugin --scope internal --no-private",
+    "prettier:check": "prettier --check .",
+    "create-plugin": "backstage-cli create-plugin --scope internal",
     "remove-plugin": "backstage-cli remove-plugin"
   },
-  "resolutions": {
-    "graphql-language-service-interface": "2.8.2",
-    "graphql-language-service-parser": "1.9.0"
-  },
   "workspaces": {
@@ -35,7 +32,7 @@
   "devDependencies": {
-    "@backstage/cli": "^0.6.14",
-    "@spotify/prettier-config": "^7.0.0",
+    "@backstage/cli": "^0.10.0",
+    "@spotify/prettier-config": "^11.0.0",
     "concurrently": "^6.0.0",
     "lerna": "^4.0.0",
-    "prettier": "^1.19.1"
+    "prettier": "^2.3.2"
   },
@@ -50,7 +47,2 @@
     ]
-  },
-  "jest": {
-    "transformModules": [
-      "@asyncapi/react-component"
-    ]
   }
diff --git a/packages/app/package.json b/packages/app/package.json
index 854dd4f..9f1021a 100644
--- a/packages/app/package.json
+++ b/packages/app/package.json
@@ -6,20 +6,23 @@
   "dependencies": {
-    "@backstage/catalog-model": "^0.8.1",
-    "@backstage/cli": "^0.6.14",
-    "@backstage/core": "^0.7.12",
-    "@backstage/integration-react": "^0.1.2",
-    "@backstage/plugin-api-docs": "^0.4.15",
-    "@backstage/plugin-catalog": "^0.6.1",
-    "@backstage/plugin-catalog-import": "^0.5.8",
-    "@backstage/plugin-catalog-react": "^0.2.1",
-    "@backstage/plugin-github-actions": "^0.4.8",
-    "@backstage/plugin-org": "^0.3.14",
-    "@backstage/plugin-scaffolder": "^0.9.7",
-    "@backstage/plugin-search": "^0.3.7",
-    "@backstage/plugin-tech-radar": "^0.4.0",
-    "@backstage/plugin-techdocs": "^0.9.5",
-    "@backstage/plugin-user-settings": "^0.2.10",
-    "@backstage/test-utils": "^0.1.13",
-    "@backstage/theme": "^0.2.8",
-    "@material-ui/core": "^4.11.0",
+    "@backstage/app-defaults": "^0.1.1",
+    "@backstage/catalog-model": "^0.9.7",
+    "@backstage/cli": "^0.10.0",
+    "@backstage/core-app-api": "^0.1.24",
+    "@backstage/core-components": "^0.7.6",
+    "@backstage/core-plugin-api": "^0.2.2",
+    "@backstage/integration-react": "^0.1.14",
+    "@backstage/plugin-api-docs": "^0.6.16",
+    "@backstage/plugin-catalog": "^0.7.3",
+    "@backstage/plugin-catalog-import": "^0.7.4",
+    "@backstage/plugin-catalog-react": "^0.6.4",
+    "@backstage/plugin-github-actions": "^0.4.25",
+    "@backstage/plugin-org": "^0.3.29",
+    "@backstage/plugin-scaffolder": "^0.11.13",
+    "@backstage/plugin-search": "^0.5.0",
+    "@backstage/plugin-tech-radar": "^0.4.12",
+    "@backstage/plugin-techdocs": "^0.12.8",
+    "@backstage/plugin-user-settings": "^0.3.12",
+    "@backstage/test-utils": "^0.1.23",
+    "@backstage/theme": "^0.2.14",
+    "@material-ui/core": "^4.12.2",
     "@material-ui/icons": "^4.9.1",
@@ -38,3 +41,3 @@
     "@types/node": "^14.14.32",
-    "@types/react-dom": "^16.9.8",
+    "@types/react-dom": "*",
     "cross-env": "^7.0.0",
diff --git a/packages/app/public/index.html b/packages/app/public/index.html
index 5653173..b93896c 100644
--- a/packages/app/public/index.html
+++ b/packages/app/public/index.html
@@ -67,3 +67,3 @@
   </head>
-  <body style="margin: 0;">
+  <body style="margin: 0">
     <noscript>You need to enable JavaScript to run this app.</noscript>
diff --git a/packages/app/src/App.test.tsx b/packages/app/src/App.test.tsx
index 82bc479..b94cac7 100644
--- a/packages/app/src/App.test.tsx
+++ b/packages/app/src/App.test.tsx
@@ -12,5 +12,5 @@ describe('App', () => {
             app: { title: 'Test' },
-            backend: { baseUrl: 'http://localhost:7000' },
+            backend: { baseUrl: 'http://localhost:7007' },
             techdocs: {
-              storageUrl: 'http://localhost:7000/api/techdocs/static/docs',
+              storageUrl: 'http://localhost:7007/api/techdocs/static/docs',
             },
diff --git a/packages/app/src/App.tsx b/packages/app/src/App.tsx
index 07d030b..8a53583 100644
--- a/packages/app/src/App.tsx
+++ b/packages/app/src/App.tsx
@@ -2,8 +2,2 @@ import React from 'react';
 import { Navigate, Route } from 'react-router';
-import {
-  AlertDisplay,
-  createApp,
-  FlatRoutes,
-  OAuthRequestDialog,
-} from '@backstage/core';
 import { apiDocsPlugin, ApiExplorerPage } from '@backstage/plugin-api-docs';
@@ -14,10 +8,15 @@ import {
 } from '@backstage/plugin-catalog';
-import {CatalogImportPage, catalogImportPlugin} from '@backstage/plugin-catalog-import';
-import { 
-  ScaffolderPage, 
-  scaffolderPlugin 
-} from '@backstage/plugin-scaffolder';
+import {
+  CatalogImportPage,
+  catalogImportPlugin,
+} from '@backstage/plugin-catalog-import';
+import { ScaffolderPage, scaffolderPlugin } from '@backstage/plugin-scaffolder';
 import { SearchPage } from '@backstage/plugin-search';
 import { TechRadarPage } from '@backstage/plugin-tech-radar';
-import { TechdocsPage } from '@backstage/plugin-techdocs';
+import {
+  DefaultTechDocsHome,
+  TechDocsIndexPage,
+  techdocsPlugin,
+  TechDocsReaderPage,
+} from '@backstage/plugin-techdocs';
 import { UserSettingsPage } from '@backstage/plugin-user-settings';
@@ -25,4 +24,9 @@ import { apis } from './apis';
 import { entityPage } from './components/catalog/EntityPage';
+import { searchPage } from './components/search/SearchPage';
 import { Root } from './components/Root';
 
+import { AlertDisplay, OAuthRequestDialog } from '@backstage/core-components';
+import { createApp } from '@backstage/app-defaults';
+import { FlatRoutes } from '@backstage/core-app-api';
+
 const app = createApp({
@@ -32,2 +36,3 @@ const app = createApp({
       createComponent: scaffolderPlugin.routes.root,
+      viewTechDoc: techdocsPlugin.routes.docRoot,
     });
@@ -47,3 +52,3 @@ const routes = (
   <FlatRoutes>
-    <Navigate key="/" to="/catalog" />
+    <Navigate key="/" to="catalog" />
     <Route path="/catalog" element={<CatalogIndexPage />} />
@@ -55,3 +60,9 @@ const routes = (
     </Route>
-    <Route path="/docs" element={<TechdocsPage />} />
+    <Route path="/docs" element={<TechDocsIndexPage />}>
+      <DefaultTechDocsHome />
+    </Route>
+    <Route
+      path="/docs/:namespace/:kind/:name/*"
+      element={<TechDocsReaderPage />}
+    />
     <Route path="/create" element={<ScaffolderPage />} />
@@ -63,3 +74,5 @@ const routes = (
     <Route path="/catalog-import" element={<CatalogImportPage />} />
-    <Route path="/search" element={<SearchPage />} />
+    <Route path="/search" element={<SearchPage />}>
+      {searchPage}
+    </Route>
     <Route path="/settings" element={<UserSettingsPage />} />
diff --git a/packages/app/src/apis.ts b/packages/app/src/apis.ts
index d803416..c89753a 100644
--- a/packages/app/src/apis.ts
+++ b/packages/app/src/apis.ts
@@ -1,7 +1,11 @@
 import {
-  AnyApiFactory, configApiRef, createApiFactory
-} from '@backstage/core';
-import {
-  ScmIntegrationsApi, scmIntegrationsApiRef
+  ScmIntegrationsApi,
+  scmIntegrationsApiRef,
+  ScmAuth,
 } from '@backstage/integration-react';
+import {
+  AnyApiFactory,
+  configApiRef,
+  createApiFactory,
+} from '@backstage/core-plugin-api';
 
@@ -13,2 +17,3 @@ export const apis: AnyApiFactory[] = [
   }),
+  ScmAuth.createDefaultApiFactory(),
 ];
diff --git a/packages/app/src/components/Root/LogoFull.tsx b/packages/app/src/components/Root/LogoFull.tsx
index 2fb7674..c7b1c84 100644
--- a/packages/app/src/components/Root/LogoFull.tsx
+++ b/packages/app/src/components/Root/LogoFull.tsx
@@ -1,3 +1,3 @@
 /*
- * Copyright 2020 Spotify AB
+ * Copyright 2020 The Backstage Authors
  *
diff --git a/packages/app/src/components/Root/LogoIcon.tsx b/packages/app/src/components/Root/LogoIcon.tsx
index 507e47d..073cf6e 100644
--- a/packages/app/src/components/Root/LogoIcon.tsx
+++ b/packages/app/src/components/Root/LogoIcon.tsx
@@ -1,3 +1,3 @@
 /*
- * Copyright 2020 Spotify AB
+ * Copyright 2020 The Backstage Authors
  *
diff --git a/packages/app/src/components/Root/Root.tsx b/packages/app/src/components/Root/Root.tsx
index 9c07e0c..b4fa04f 100644
--- a/packages/app/src/components/Root/Root.tsx
+++ b/packages/app/src/components/Root/Root.tsx
@@ -1,3 +1,3 @@
 /*
- * Copyright 2020 Spotify AB
+ * Copyright 2020 The Backstage Authors
  *
@@ -25,2 +25,8 @@ import LogoFull from './LogoFull';
 import LogoIcon from './LogoIcon';
+import { NavLink } from 'react-router-dom';
+import { Settings as SidebarSettings } from '@backstage/plugin-user-settings';
+import {
+  SidebarSearchModal,
+  SearchContextProvider,
+} from '@backstage/plugin-search';
 import {
@@ -33,6 +39,4 @@ import {
   SidebarSpace,
-} from '@backstage/core';
-import { NavLink } from 'react-router-dom';
-import { Settings as SidebarSettings } from '@backstage/plugin-user-settings';
-import { SidebarSearch } from '@backstage/plugin-search';
+  SidebarScrollWrapper,
+} from '@backstage/core-components';
 
@@ -75,6 +79,8 @@ export const Root = ({ children }: PropsWithChildren<{}>) => (
       <SidebarLogo />
-      <SidebarSearch />
+      <SearchContextProvider>
+        <SidebarSearchModal />
+      </SearchContextProvider>
       <SidebarDivider />
       {/* Global nav, not org-specific */}
-      <SidebarItem icon={HomeIcon} to="/catalog" text="Home" />
+      <SidebarItem icon={HomeIcon} to="catalog" text="Home" />
       <SidebarItem icon={ExtensionIcon} to="api-docs" text="APIs" />
@@ -84,3 +90,5 @@ export const Root = ({ children }: PropsWithChildren<{}>) => (
       <SidebarDivider />
-      <SidebarItem icon={MapIcon} to="tech-radar" text="Tech Radar" />
+      <SidebarScrollWrapper>
+        <SidebarItem icon={MapIcon} to="tech-radar" text="Tech Radar" />
+      </SidebarScrollWrapper>
       <SidebarSpace />
diff --git a/packages/app/src/components/Root/index.ts b/packages/app/src/components/Root/index.ts
index ab65cb2..dff706f 100644
--- a/packages/app/src/components/Root/index.ts
+++ b/packages/app/src/components/Root/index.ts
@@ -1,3 +1,3 @@
 /*
- * Copyright 2020 Spotify AB
+ * Copyright 2020 The Backstage Authors
  *
diff --git a/packages/app/src/components/catalog/EntityPage.tsx b/packages/app/src/components/catalog/EntityPage.tsx
index 4f67dda..d3b4b78 100644
--- a/packages/app/src/components/catalog/EntityPage.tsx
+++ b/packages/app/src/components/catalog/EntityPage.tsx
@@ -1,3 +1,3 @@
 /*
- * Copyright 2020 Spotify AB
+ * Copyright 2020 The Backstage Authors
  *
@@ -17,3 +17,2 @@ import React from 'react';
 import { Button, Grid } from '@material-ui/core';
-import { EmptyState } from '@backstage/core';
 import {
@@ -38,4 +37,8 @@ import {
   EntitySwitch,
+  EntityOrphanWarning,
+  EntityProcessingErrorsPanel,
   isComponentType,
   isKind,
+  hasCatalogProcessingErrors,
+  isOrphan,
 } from '@backstage/plugin-catalog';
@@ -52,2 +55,3 @@ import {
 import { EntityTechdocsContent } from '@backstage/plugin-techdocs';
+import { EmptyState } from '@backstage/core-components';
 
@@ -80,4 +84,25 @@ const cicdContent = (
 
+const entityWarningContent = (
+  <>
+    <EntitySwitch>
+      <EntitySwitch.Case if={isOrphan}>
+        <Grid item xs={12}>
+          <EntityOrphanWarning />
+        </Grid>
+      </EntitySwitch.Case>
+    </EntitySwitch>
+
+    <EntitySwitch>
+      <EntitySwitch.Case if={hasCatalogProcessingErrors}>
+        <Grid item xs={12}>
+          <EntityProcessingErrorsPanel />
+        </Grid>
+      </EntitySwitch.Case>
+    </EntitySwitch>
+  </>
+);
+
 const overviewContent = (
   <Grid container spacing={3} alignItems="stretch">
+    {entityWarningContent}
     <Grid item md={6}>
@@ -159,2 +184,9 @@ const websiteEntityPage = (
 
+/**
+ * NOTE: This page is designed to work on small screens such as mobile devices.
+ * This is based on Material UI Grid. If breakpoints are used, each grid item must set the `xs` prop to a column size or to `true`,
+ * since this does not default. If no breakpoints are used, the items will equitably share the available space.
+ * https://material-ui.com/components/grid/#basic-grid.
+ */
+
 const defaultEntityPage = (
@@ -189,2 +221,3 @@ const apiPage = (
       <Grid container spacing={3}>
+        {entityWarningContent}
         <Grid item md={6}>
@@ -192,2 +225,5 @@ const apiPage = (
         </Grid>
+        <Grid item md={4} xs={12}>
+          <EntityLinksCard />
+        </Grid>
         <Grid container item md={12}>
@@ -217,2 +253,3 @@ const userPage = (
       <Grid container spacing={3}>
+        {entityWarningContent}
         <Grid item xs={12} md={6}>
@@ -232,2 +269,3 @@ const groupPage = (
       <Grid container spacing={3}>
+        {entityWarningContent}
         <Grid item xs={12} md={6}>
@@ -250,2 +288,3 @@ const systemPage = (
       <Grid container spacing={3} alignItems="stretch">
+        {entityWarningContent}
         <Grid item md={6}>
@@ -274,2 +313,3 @@ const domainPage = (
       <Grid container spacing={3} alignItems="stretch">
+        {entityWarningContent}
         <Grid item md={6}>
diff --git a/packages/app/src/components/search/SearchPage.tsx b/packages/app/src/components/search/SearchPage.tsx
new file mode 100644
index 0000000..50ffbad
--- /dev/null
+++ b/packages/app/src/components/search/SearchPage.tsx
@@ -0,0 +1,101 @@
+import React from 'react';
+import { makeStyles, Theme, Grid, List, Paper } from '@material-ui/core';
+
+import { CatalogResultListItem } from '@backstage/plugin-catalog';
+import { DocsResultListItem } from '@backstage/plugin-techdocs';
+
+import {
+  SearchBar,
+  SearchFilter,
+  SearchResult,
+  SearchType,
+  DefaultResultListItem,
+} from '@backstage/plugin-search';
+import { Content, Header, Page } from '@backstage/core-components';
+
+const useStyles = makeStyles((theme: Theme) => ({
+  bar: {
+    padding: theme.spacing(1, 0),
+  },
+  filters: {
+    padding: theme.spacing(2),
+  },
+  filter: {
+    '& + &': {
+      marginTop: theme.spacing(2.5),
+    },
+  },
+}));
+
+const SearchPage = () => {
+  const classes = useStyles();
+
+  return (
+    <Page themeId="home">
+      <Header title="Search" />
+      <Content>
+        <Grid container direction="row">
+          <Grid item xs={12}>
+            <Paper className={classes.bar}>
+              <SearchBar debounceTime={100} />
+            </Paper>
+          </Grid>
+          <Grid item xs={3}>
+            <Paper className={classes.filters}>
+              <SearchType
+                values={['techdocs', 'software-catalog']}
+                name="type"
+                defaultValue="software-catalog"
+              />
+              <SearchFilter.Select
+                className={classes.filter}
+                name="kind"
+                values={['Component', 'Template']}
+              />
+              <SearchFilter.Checkbox
+                className={classes.filter}
+                name="lifecycle"
+                values={['experimental', 'production']}
+              />
+            </Paper>
+          </Grid>
+          <Grid item xs={9}>
+            <SearchResult>
+              {({ results }) => (
+                <List>
+                  {results.map(({ type, document }) => {
+                    switch (type) {
+                      case 'software-catalog':
+                        return (
+                          <CatalogResultListItem
+                            key={document.location}
+                            result={document}
+                          />
+                        );
+                      case 'techdocs':
+                        return (
+                          <DocsResultListItem
+                            key={document.location}
+                            result={document}
+                          />
+                        );
+                      default:
+                        return (
+                          <DefaultResultListItem
+                            key={document.location}
+                            result={document}
+                          />
+                        );
+                    }
+                  })}
+                </List>
+              )}
+            </SearchResult>
+          </Grid>
+        </Grid>
+      </Content>
+    </Page>
+  );
+};
+
+export const searchPage = <SearchPage />;
diff --git a/packages/backend/README.md b/packages/backend/README.md
index 81e0f80..02426ef 100644
--- a/packages/backend/README.md
+++ b/packages/backend/README.md
@@ -38,3 +38,3 @@ the backend without using the auth or sentry features.
 
-The backend starts up on port 7000 per default.
+The backend starts up on port 7007 per default.
 
diff --git a/packages/backend/package.json b/packages/backend/package.json
index 9a53707..e908e1e 100644
--- a/packages/backend/package.json
+++ b/packages/backend/package.json
@@ -6,5 +6,2 @@
   "private": true,
-  "engines": {
-    "node": "12 || 14"
-  },
   "scripts": {
@@ -20,15 +17,17 @@
     "app": "0.0.0",
-    "@backstage/backend-common": "^0.8.1",
-    "@backstage/catalog-model": "^0.8.1",
-    "@backstage/catalog-client": "^0.3.12",
-    "@backstage/config": "^0.1.5",
-    "@backstage/plugin-app-backend": "^0.3.13",
-    "@backstage/plugin-auth-backend": "^0.3.12",
-    "@backstage/plugin-catalog-backend": "^0.10.1",
-    "@backstage/plugin-proxy-backend": "^0.2.8",
-    "@backstage/plugin-scaffolder-backend": "^0.11.5",
-    "@backstage/plugin-techdocs-backend": "^0.8.2",
-    "@gitbeaker/node": "^29.2.0",
+    "@backstage/backend-common": "^0.9.12",
+    "@backstage/catalog-model": "^0.9.7",
+    "@backstage/catalog-client": "^0.5.2",
+    "@backstage/config": "^0.1.11",
+    "@backstage/plugin-app-backend": "^0.3.19",
+    "@backstage/plugin-auth-backend": "^0.4.10",
+    "@backstage/plugin-catalog-backend": "^0.19.0",
+    "@backstage/plugin-proxy-backend": "^0.2.14",
+    "@backstage/plugin-scaffolder-backend": "^0.15.15",
+    "@backstage/plugin-search-backend": "^0.2.7",
+    "@backstage/plugin-search-backend-node": "^0.4.3",
+    "@backstage/plugin-techdocs-backend": "^0.11.0",
+    "@gitbeaker/node": "^34.6.0",
     "@octokit/rest": "^18.5.3",
-    "dockerode": "^3.2.1",
+    "dockerode": "^3.3.1",
     "express": "^4.17.1",
@@ -36,3 +35,3 @@
     "knex": "^0.21.6",
-    "sqlite3": "^5.0.0",
+    "sqlite3": "^5.0.1",
     "winston": "^3.2.1"
@@ -40,4 +39,4 @@
   "devDependencies": {
-    "@backstage/cli": "^0.6.14",
-    "@types/dockerode": "^3.2.1",
+    "@backstage/cli": "^0.10.0",
+    "@types/dockerode": "^3.3.0",
     "@types/express": "^4.17.6",
diff --git a/packages/backend/src/index.ts b/packages/backend/src/index.ts
index aebd034..3f12122 100644
--- a/packages/backend/src/index.ts
+++ b/packages/backend/src/index.ts
@@ -16,5 +16,6 @@ import {
   CacheManager,
-  SingleConnectionDatabaseManager,
+  DatabaseManager,
   SingleHostDiscovery,
   UrlReaders,
+  ServerTokenManager,
 } from '@backstage/backend-common';
@@ -27,2 +28,3 @@ import proxy from './plugins/proxy';
 import techdocs from './plugins/techdocs';
+import search from './plugins/search';
 import { PluginEnvironment } from './types';
@@ -36,4 +38,5 @@ function makeCreateEnv(config: Config) {
 
-  const databaseManager = SingleConnectionDatabaseManager.fromConfig(config);
   const cacheManager = CacheManager.fromConfig(config);
+  const databaseManager = DatabaseManager.fromConfig(config);
+  const tokenManager = ServerTokenManager.noop();
 
@@ -43,3 +46,3 @@ function makeCreateEnv(config: Config) {
     const cache = cacheManager.forPlugin(plugin);
-    return { logger, database, cache, config, reader, discovery };
+    return { logger, database, cache, config, reader, discovery, tokenManager };
   };
@@ -59,2 +62,3 @@ async function main() {
   const techdocsEnv = useHotMemoize(module, () => createEnv('techdocs'));
+  const searchEnv = useHotMemoize(module, () => createEnv('search'));
   const appEnv = useHotMemoize(module, () => createEnv('app'));
@@ -67,2 +71,3 @@ async function main() {
   apiRouter.use('/proxy', await proxy(proxyEnv));
+  apiRouter.use('/search', await search(searchEnv));
   apiRouter.use(notFoundHandler());
diff --git a/packages/backend/src/plugins/catalog.ts b/packages/backend/src/plugins/catalog.ts
index 838228c..876cb6b 100644
--- a/packages/backend/src/plugins/catalog.ts
+++ b/packages/backend/src/plugins/catalog.ts
@@ -1,7 +1,3 @@
-import { useHotCleanup } from '@backstage/backend-common';
-import {
-  CatalogBuilder,
-  createRouter,
-  runPeriodically
-} from '@backstage/plugin-catalog-backend';
+import { CatalogBuilder } from '@backstage/plugin-catalog-backend';
+import { ScaffolderEntitiesProcessor } from '@backstage/plugin-scaffolder-backend';
 import { Router } from 'express';
@@ -9,24 +5,10 @@ import { PluginEnvironment } from '../types';
 
-export default async function createPlugin(env: PluginEnvironment): Promise<Router> {
-  const builder = new CatalogBuilder(env);
-  const {
-    entitiesCatalog,
-    locationsCatalog,
-    higherOrderOperation,
-    locationAnalyzer,
-  } = await builder.build();
-
-  useHotCleanup(
-    module,
-    runPeriodically(() => higherOrderOperation.refreshAllLocations(), 100000),
-  );
-
-  return await createRouter({
-    entitiesCatalog,
-    locationsCatalog,
-    higherOrderOperation,
-    locationAnalyzer,
-    logger: env.logger,
-    config: env.config,
-  });
+export default async function createPlugin(
+  env: PluginEnvironment,
+): Promise<Router> {
+  const builder = await CatalogBuilder.create(env);
+  builder.addProcessor(new ScaffolderEntitiesProcessor());
+  const { processingEngine, router } = await builder.build();
+  await processingEngine.start();
+  return router;
 }
diff --git a/packages/backend/src/plugins/scaffolder.ts b/packages/backend/src/plugins/scaffolder.ts
index 333ffa1..6be2e97 100644
--- a/packages/backend/src/plugins/scaffolder.ts
+++ b/packages/backend/src/plugins/scaffolder.ts
@@ -1,14 +1,4 @@
-import {
-  DockerContainerRunner,
-  SingleHostDiscovery,
-} from '@backstage/backend-common';
+import { DockerContainerRunner } from '@backstage/backend-common';
 import { CatalogClient } from '@backstage/catalog-client';
-import {
-  CookieCutter,
-  CreateReactAppTemplater,
-  createRouter,
-  Preparers,
-  Publishers,
-  Templaters,
-} from '@backstage/plugin-scaffolder-backend';
+import { createRouter } from '@backstage/plugin-scaffolder-backend';
 import Docker from 'dockerode';
@@ -22,2 +12,3 @@ export default async function createPlugin({
   reader,
+  discovery,
 }: PluginEnvironment): Promise<Router> {
@@ -25,14 +16,2 @@ export default async function createPlugin({
   const containerRunner = new DockerContainerRunner({ dockerClient });
-
-  const cookiecutterTemplater = new CookieCutter({ containerRunner });
-  const craTemplater = new CreateReactAppTemplater({ containerRunner });
-  const templaters = new Templaters();
-
-  templaters.register('cookiecutter', cookiecutterTemplater);
-  templaters.register('cra', craTemplater);
-
-  const preparers = await Preparers.fromConfig(config, { logger });
-  const publishers = await Publishers.fromConfig(config, { logger });
-
-  const discovery = SingleHostDiscovery.fromConfig(config);
   const catalogClient = new CatalogClient({ discoveryApi: discovery });
@@ -40,5 +19,3 @@ export default async function createPlugin({
   return await createRouter({
-    preparers,
-    templaters,
-    publishers,
+    containerRunner,
     logger,
diff --git a/packages/backend/src/plugins/search.ts b/packages/backend/src/plugins/search.ts
new file mode 100644
index 0000000..f23b0c7
--- /dev/null
+++ b/packages/backend/src/plugins/search.ts
@@ -0,0 +1,54 @@
+import { useHotCleanup } from '@backstage/backend-common';
+import { createRouter } from '@backstage/plugin-search-backend';
+import {
+  IndexBuilder,
+  LunrSearchEngine,
+} from '@backstage/plugin-search-backend-node';
+import { PluginEnvironment } from '../types';
+import { DefaultCatalogCollator } from '@backstage/plugin-catalog-backend';
+import { DefaultTechDocsCollator } from '@backstage/plugin-techdocs-backend';
+
+export default async function createPlugin({
+  logger,
+  discovery,
+  config,
+  tokenManager,
+}: PluginEnvironment) {
+  // Initialize a connection to a search engine.
+  const searchEngine = new LunrSearchEngine({ logger });
+  const indexBuilder = new IndexBuilder({ logger, searchEngine });
+
+  // Collators are responsible for gathering documents known to plugins. This
+  // collator gathers entities from the software catalog.
+  indexBuilder.addCollator({
+    defaultRefreshIntervalSeconds: 600,
+    collator: DefaultCatalogCollator.fromConfig(config, {
+      discovery,
+      tokenManager,
+    }),
+  });
+
+  // collator gathers entities from techdocs.
+  indexBuilder.addCollator({
+    defaultRefreshIntervalSeconds: 600,
+    collator: DefaultTechDocsCollator.fromConfig(config, {
+      discovery,
+      logger,
+      tokenManager,
+    }),
+  });
+
+  // The scheduler controls when documents are gathered from collators and sent
+  // to the search engine for indexing.
+  const { scheduler } = await indexBuilder.build();
+
+  // A 3 second delay gives the backend server a chance to initialize before
+  // any collators are executed, which may attempt requests against the API.
+  setTimeout(() => scheduler.start(), 3000);
+  useHotCleanup(module, () => scheduler.stop());
+
+  return await createRouter({
+    engine: indexBuilder.getSearchEngine(),
+    logger,
+  });
+}
diff --git a/packages/backend/src/types.ts b/packages/backend/src/types.ts
index e5bfff2..b1e2e0a 100644
--- a/packages/backend/src/types.ts
+++ b/packages/backend/src/types.ts
@@ -6,2 +6,3 @@ import {
   PluginEndpointDiscovery,
+  TokenManager,
   UrlReader,
@@ -14,4 +15,5 @@ export type PluginEnvironment = {
   config: Config;
-  reader: UrlReader
+  reader: UrlReader;
   discovery: PluginEndpointDiscovery;
+  tokenManager: TokenManager;
 };
