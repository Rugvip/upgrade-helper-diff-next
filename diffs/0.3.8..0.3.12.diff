diff --git a/.dockerignore b/.dockerignore
new file mode 100644
index 0000000..63c9c34
--- /dev/null
+++ b/.dockerignore
@@ -0,0 +1,5 @@
+.git
+node_modules
+packages
+!packages/backend/dist
+plugins
diff --git a/app-config.yaml b/app-config.yaml
index d34a1c3..d5ce05d 100644
--- a/app-config.yaml
+++ b/app-config.yaml
@@ -39,2 +39,5 @@ proxy:
 # Reference documentation http://backstage.io/docs/features/techdocs/configuration
+# Note: After experimenting with basic setup, use CI/CD to generate docs
+# and an external cloud storage when deploying TechDocs for production use-case.
+# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
 techdocs:
diff --git a/package.json b/package.json
index b36958a..6e2213f 100644
--- a/package.json
+++ b/package.json
@@ -30,5 +30,5 @@
   "devDependencies": {
-    "@backstage/cli": "^0.6.0",
+    "@backstage/cli": "^0.6.3",
     "@spotify/prettier-config": "^7.0.0",
-    "lerna": "^3.20.2",
+    "lerna": "^4.0.0",
     "prettier": "^1.19.1"
diff --git a/packages/app/package.json b/packages/app/package.json
index 32ca28a..24f29b2 100644
--- a/packages/app/package.json
+++ b/packages/app/package.json
@@ -8,17 +8,17 @@
     "@material-ui/icons": "^4.9.1",
-    "@backstage/cli": "^0.6.0",
-    "@backstage/core": "^0.6.0",
-    "@backstage/plugin-api-docs": "^0.4.4",
-    "@backstage/plugin-catalog": "^0.3.0",
-    "@backstage/plugin-catalog-react": "^0.0.2",
-    "@backstage/plugin-catalog-import": "^0.3.7",
-    "@backstage/plugin-scaffolder": "^0.4.2",
-    "@backstage/plugin-techdocs": "^0.5.5",
-    "@backstage/catalog-model": "^0.7.1",
-    "@backstage/plugin-circleci": "^0.2.7",
-    "@backstage/plugin-tech-radar": "^0.3.4",
-    "@backstage/plugin-github-actions": "^0.3.1",
-    "@backstage/plugin-user-settings": "^0.2.5",
-    "@backstage/plugin-search": "^0.2.7",
-    "@backstage/test-utils": "^0.1.6",
+    "@backstage/cli": "^0.6.3",
+    "@backstage/core": "^0.7.0",
+    "@backstage/plugin-api-docs": "^0.4.8",
+    "@backstage/plugin-catalog": "^0.4.1",
+    "@backstage/plugin-catalog-react": "^0.1.1",
+    "@backstage/plugin-catalog-import": "^0.4.3",
+    "@backstage/plugin-scaffolder": "^0.7.0",
+    "@backstage/plugin-techdocs": "^0.6.0",
+    "@backstage/catalog-model": "^0.7.3",
+    "@backstage/plugin-circleci": "^0.2.11",
+    "@backstage/plugin-tech-radar": "^0.3.7",
+    "@backstage/plugin-github-actions": "^0.3.5",
+    "@backstage/plugin-user-settings": "^0.2.7",
+    "@backstage/plugin-search": "^0.3.3",
+    "@backstage/test-utils": "^0.1.8",
     "@backstage/theme": "^0.2.3",
diff --git a/packages/app/public/index.html b/packages/app/public/index.html
index ea9208c..5653173 100644
--- a/packages/app/public/index.html
+++ b/packages/app/public/index.html
@@ -50,2 +50,18 @@
     <title><%= app.title %></title>
+    <% if (app.googleAnalyticsTrackingId && typeof app.googleAnalyticsTrackingId
+    === 'string') { %>
+    <script
+      async
+      src="https://www.googletagmanager.com/gtag/js?id=<%= app.googleAnalyticsTrackingId %>"
+    ></script>
+    <script>
+      window.dataLayer = window.dataLayer || [];
+      function gtag() {
+        dataLayer.push(arguments);
+      }
+      gtag('js', new Date());
+
+      gtag('config', '<%= app.googleAnalyticsTrackingId %>');
+    </script>
+    <% } %>
   </head>
diff --git a/packages/app/src/App.test.tsx b/packages/app/src/App.test.tsx
index 21a2eaa..82bc479 100644
--- a/packages/app/src/App.test.tsx
+++ b/packages/app/src/App.test.tsx
@@ -6,5 +6,5 @@ describe('App', () => {
   it('should render', async () => {
-    Object.defineProperty(process.env, 'APP_CONFIG', {
-      configurable: true,
-      value: [
+    process.env = {
+      NODE_ENV: 'test',
+      APP_CONFIG: [
         {
@@ -19,4 +19,4 @@ describe('App', () => {
         },
-      ],
-    });
+      ] as any,
+    };
 
diff --git a/packages/app/src/App.tsx b/packages/app/src/App.tsx
index 6deedcd..b2c9d10 100644
--- a/packages/app/src/App.tsx
+++ b/packages/app/src/App.tsx
@@ -1,22 +1,26 @@
-import React from 'react';
 import {
-  createApp,
   AlertDisplay,
+  createApp,
+  FlatRoutes,
   OAuthRequestDialog,
   SidebarPage,
-  createRouteRef,
-  FlatRoutes,
 } from '@backstage/core';
+import { apiDocsPlugin, ApiExplorerPage } from '@backstage/plugin-api-docs';
+import {
+  CatalogEntityPage,
+  CatalogIndexPage,
+  catalogPlugin,
+} from '@backstage/plugin-catalog';
+import { CatalogImportPage } from '@backstage/plugin-catalog-import';
+import { ScaffolderPage, scaffolderPlugin } from '@backstage/plugin-scaffolder';
+import { SearchPage } from '@backstage/plugin-search';
+import { TechRadarPage } from '@backstage/plugin-tech-radar';
+import { TechdocsPage } from '@backstage/plugin-techdocs';
+import { UserSettingsPage } from '@backstage/plugin-user-settings';
+import React from 'react';
+import { Navigate, Route } from 'react-router';
 import { apis } from './apis';
+import { EntityPage } from './components/catalog/EntityPage';
 import * as plugins from './plugins';
 import { AppSidebar } from './sidebar';
-import { Route, Navigate } from 'react-router';
-import { Router as CatalogRouter } from '@backstage/plugin-catalog';
-import { Router as DocsRouter } from '@backstage/plugin-techdocs';
-import { Router as ImportComponentRouter } from '@backstage/plugin-catalog-import';
-import { Router as TechRadarRouter } from '@backstage/plugin-tech-radar';
-import { SearchPage as SearchRouter } from '@backstage/plugin-search';
-import { Router as SettingsRouter } from '@backstage/plugin-user-settings';
-
-import { EntityPage } from './components/catalog/EntityPage';
 
@@ -25,2 +29,10 @@ const app = createApp({
   plugins: Object.values(plugins),
+  bindRoutes({ bind }) {
+    bind(catalogPlugin.externalRoutes, {
+      createComponent: scaffolderPlugin.routes.root,
+    });
+    bind(apiDocsPlugin.externalRoutes, {
+      createComponent: scaffolderPlugin.routes.root,
+    });
+  },
 });
@@ -29,9 +41,2 @@ const AppProvider = app.getProvider();
 const AppRouter = app.getRouter();
-const deprecatedAppRoutes = app.getRoutes();
-
-const catalogRouteRef = createRouteRef({
-  path: '/catalog',
-  title: 'Service Catalog',
-});
-
 
@@ -46,21 +51,19 @@ const App = () => (
           <Navigate key="/" to="/catalog" />
+          <Route path="/catalog" element={<CatalogIndexPage />} />
           <Route
-            path="/catalog"
-            element={<CatalogRouter EntityPage={EntityPage} />}
-          />
-          <Route path="/docs" element={<DocsRouter />} />
+            path="/catalog/:namespace/:kind/:name"
+            element={<CatalogEntityPage />}
+          >
+            <EntityPage />
+          </Route>
+          <Route path="/docs" element={<TechdocsPage />} />
+          <Route path="/create" element={<ScaffolderPage />} />
+          <Route path="/api-docs" element={<ApiExplorerPage />} />
           <Route
             path="/tech-radar"
-            element={<TechRadarRouter width={1500} height={800} />}
-          />
-          <Route
-            path="/catalog-import"
-            element={<ImportComponentRouter catalogRouteRef={catalogRouteRef} />}
-          />
-          <Route
-            path="/search"
-            element={<SearchRouter/>}
+            element={<TechRadarPage width={1500} height={800} />}
           />
-          <Route path="/settings" element={<SettingsRouter />} />
-          {deprecatedAppRoutes}
+          <Route path="/catalog-import" element={<CatalogImportPage />} />
+          <Route path="/search" element={<SearchPage />} />
+          <Route path="/settings" element={<UserSettingsPage />} />
         </FlatRoutes>
diff --git a/packages/backend/Dockerfile b/packages/backend/Dockerfile
index 5051471..acef405 100644
--- a/packages/backend/Dockerfile
+++ b/packages/backend/Dockerfile
@@ -1,4 +1,15 @@
-FROM node:12-buster
+# This dockerfile builds an image for the backend package.
+# It should be executed with the root of the repo as docker context.
+#
+# Before building this image, be sure to have run the following commands in the repo root:
+#
+# yarn install
+# yarn tsc
+# yarn build
+#
+# Once the commands have been run, you can build the image using `yarn build-image`
 
-WORKDIR /usr/src/app
+FROM node:14-buster-slim
+
+WORKDIR /app
 
@@ -7,3 +18,3 @@ WORKDIR /usr/src/app
 # and along with yarn.lock and the root package.json, that's enough to run yarn install.
-ADD yarn.lock package.json skeleton.tar ./
+ADD yarn.lock package.json packages/backend/dist/skeleton.tar.gz ./
 
@@ -11,6 +22,5 @@ RUN yarn install --frozen-lockfile --production --network-timeout 300000 && rm -
 
-# This will copy the contents of the dist-workspace when running the build-image command.
-# Do not use this Dockerfile outside of that command, as it will copy in the source code instead.
-COPY . .
+# Then copy the rest of the backend bundle, along with any other files we might want.
+ADD packages/backend/dist/bundle.tar.gz app-config.yaml ./
 
-CMD ["node", "packages/backend", "--config", "app-config.yaml", "--config", "app-config.production.yaml"]
+CMD ["node", "packages/backend", "--config", "app-config.yaml"]
diff --git a/packages/backend/package.json b/packages/backend/package.json
index 7126146..f3717a3 100644
--- a/packages/backend/package.json
+++ b/packages/backend/package.json
@@ -10,4 +10,4 @@
   "scripts": {
-    "build": "backstage-cli backend:build",
-    "build-image": "backstage-cli backend:build-image --build --tag backstage",
+    "build": "backstage-cli backend:bundle",
+    "build-image": "docker build ../.. -f Dockerfile --tag backstage",
     "start": "backstage-cli backend:dev",
@@ -20,11 +20,12 @@
     "app": "0.0.0",
-    "@backstage/backend-common": "^0.5.2",
-    "@backstage/catalog-model": "^0.7.1",
-    "@backstage/config": "^0.1.2",
-    "@backstage/plugin-app-backend": "^0.3.6",
-    "@backstage/plugin-auth-backend": "^0.2.12",
-    "@backstage/plugin-catalog-backend": "^0.6.0",
-    "@backstage/plugin-proxy-backend": "^0.2.4",
-    "@backstage/plugin-scaffolder-backend": "^0.6.0",
-    "@backstage/plugin-techdocs-backend": "^0.5.5",
+    "@backstage/backend-common": "^0.5.5",
+    "@backstage/catalog-model": "^0.7.3",
+    "@backstage/catalog-client": "^0.3.6",
+    "@backstage/config": "^0.1.3",
+    "@backstage/plugin-app-backend": "^0.3.8",
+    "@backstage/plugin-auth-backend": "^0.3.3",
+    "@backstage/plugin-catalog-backend": "^0.6.4",
+    "@backstage/plugin-proxy-backend": "^0.2.5",
+    "@backstage/plugin-scaffolder-backend": "^0.9.0",
+    "@backstage/plugin-techdocs-backend": "^0.6.3",
     "@gitbeaker/node": "^28.0.2",
@@ -39,3 +40,3 @@
   "devDependencies": {
-    "@backstage/cli": "^0.6.0",
+    "@backstage/cli": "^0.6.3",
     "@types/dockerode": "^3.2.1",
diff --git a/packages/backend/src/plugins/app.ts b/packages/backend/src/plugins/app.ts
index 5131694..07fb04f 100644
--- a/packages/backend/src/plugins/app.ts
+++ b/packages/backend/src/plugins/app.ts
@@ -1,2 +1,3 @@
 import { createRouter } from '@backstage/plugin-app-backend';
+import { Router } from 'express';
 import { PluginEnvironment } from '../types';
@@ -6,3 +7,3 @@ export default async function createPlugin({
   config,
-}: PluginEnvironment) {
+}: PluginEnvironment): Promise<Router> {
   return await createRouter({
diff --git a/packages/backend/src/plugins/auth.ts b/packages/backend/src/plugins/auth.ts
index fe19855..5216510 100644
--- a/packages/backend/src/plugins/auth.ts
+++ b/packages/backend/src/plugins/auth.ts
@@ -1,2 +1,3 @@
 import { createRouter } from '@backstage/plugin-auth-backend';
+import { Router } from 'express';
 import { PluginEnvironment } from '../types';
@@ -8,3 +9,3 @@ export default async function createPlugin({
   discovery,
-}: PluginEnvironment) {
+}: PluginEnvironment): Promise<Router> {
   return await createRouter({ logger, config, database, discovery });
diff --git a/packages/backend/src/plugins/catalog.ts b/packages/backend/src/plugins/catalog.ts
index 10ac116..883b70c 100644
--- a/packages/backend/src/plugins/catalog.ts
+++ b/packages/backend/src/plugins/catalog.ts
@@ -4,7 +4,8 @@ import {
   createRouter,
-  runPeriodically,
+  runPeriodically
 } from '@backstage/plugin-catalog-backend';
+import { Router } from 'express';
 import { PluginEnvironment } from '../types';
 
-export default async function createPlugin(env: PluginEnvironment) {
+export default async function createPlugin(env: PluginEnvironment): Promise<Router> {
   const builder = new CatalogBuilder(env);
diff --git a/packages/backend/src/plugins/proxy.ts b/packages/backend/src/plugins/proxy.ts
index 388d3fc..506f6d9 100644
--- a/packages/backend/src/plugins/proxy.ts
+++ b/packages/backend/src/plugins/proxy.ts
@@ -1,3 +1,3 @@
-// @ts-ignore
 import { createRouter } from '@backstage/plugin-proxy-backend';
+import { Router } from 'express';
 import { PluginEnvironment } from '../types';
@@ -8,3 +8,3 @@ export default async function createPlugin({
   discovery,
-}: PluginEnvironment) {
+}: PluginEnvironment): Promise<Router> {
   return await createRouter({ logger, config, discovery });
diff --git a/packages/backend/src/plugins/scaffolder.ts b/packages/backend/src/plugins/scaffolder.ts
index c8bd3e5..a3416c5 100644
--- a/packages/backend/src/plugins/scaffolder.ts
+++ b/packages/backend/src/plugins/scaffolder.ts
@@ -1,3 +1,6 @@
+import { SingleHostDiscovery } from '@backstage/backend-common';
+import { CatalogClient } from '@backstage/catalog-client';
 import {
   CookieCutter,
+  CreateReactAppTemplater,
   createRouter,
@@ -5,9 +8,7 @@ import {
   Publishers,
-  CreateReactAppTemplater,
-  Templaters,
-  CatalogEntityClient,
+  Templaters
 } from '@backstage/plugin-scaffolder-backend';
-import { SingleHostDiscovery } from '@backstage/backend-common';
-import type { PluginEnvironment } from '../types';
 import Docker from 'dockerode';
+import { Router } from 'express';
+import type { PluginEnvironment } from '../types';
 
@@ -16,3 +17,5 @@ export default async function createPlugin({
   config,
-}: PluginEnvironment) {
+  database,
+  reader,
+}: PluginEnvironment): Promise<Router> {
   const cookiecutterTemplater = new CookieCutter();
@@ -30,3 +33,3 @@ export default async function createPlugin({
   const discovery = SingleHostDiscovery.fromConfig(config);
-  const entityClient = new CatalogEntityClient({ discovery });
+  const catalogClient = new CatalogClient({ discoveryApi: discovery });
 
@@ -39,3 +42,5 @@ export default async function createPlugin({
     dockerClient,
-    entityClient,
+    database,
+    catalogClient,
+    reader
   });
diff --git a/packages/backend/src/plugins/techdocs.ts b/packages/backend/src/plugins/techdocs.ts
index 5c7ec50..0ba08ce 100644
--- a/packages/backend/src/plugins/techdocs.ts
+++ b/packages/backend/src/plugins/techdocs.ts
@@ -2,8 +2,10 @@ import {
   createRouter,
-  Preparers,
-  Generators,
-  Publisher,
+
+  Generators, Preparers,
+
+  Publisher
 } from '@backstage/plugin-techdocs-backend';
-import { PluginEnvironment } from '../types';
 import Docker from 'dockerode';
+import { Router } from 'express';
+import { PluginEnvironment } from '../types';
 
@@ -14,3 +16,3 @@ export default async function createPlugin({
   reader,
-}: PluginEnvironment) {
+}: PluginEnvironment): Promise<Router> {
   // Preparers are responsible for fetching source files for documentation.
