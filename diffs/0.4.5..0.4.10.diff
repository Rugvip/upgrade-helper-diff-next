diff --git a/app-config.yaml b/app-config.yaml
index aac1eb1..1a622a2 100644
--- a/app-config.yaml
+++ b/app-config.yaml
@@ -8,2 +8,7 @@ organization:
 backend:
+  # Used for enabling authentication, secret is shared by all backend plugins
+  # See backend-to-backend-auth.md in the docs for information on the format
+  # auth:
+  #   keys:
+  #     - secret: ${BACKEND_SECRET}
   baseUrl: http://localhost:7007
@@ -56,5 +61,3 @@ auth:
 scaffolder:
-  github:
-    token: ${GITHUB_TOKEN}
-    visibility: public # or 'internal' or 'private'
+  # see https://backstage.io/docs/features/software-templates/configuration for software template options
 
diff --git a/backstage.json b/backstage.json
index 77e9232..da31324 100644
--- a/backstage.json
+++ b/backstage.json
@@ -1,3 +1,3 @@
 {
-  "version": "0.4.5"
+  "version": "0.4.10"
 }
diff --git a/package.json b/package.json
index 869d117..f423117 100644
--- a/package.json
+++ b/package.json
@@ -32,4 +32,4 @@
   "devDependencies": {
-    "@backstage/cli": "^0.9.1",
-    "@spotify/prettier-config": "^11.0.0",
+    "@backstage/cli": "^0.10.4",
+    "@spotify/prettier-config": "^12.0.0",
     "concurrently": "^6.0.0",
@@ -40,3 +40,3 @@
   "lint-staged": {
-    "*.{js,jsx,ts,tsx}": [
+    "*.{js,jsx,ts,tsx,mjs,cjs}": [
       "eslint --fix",
diff --git a/packages/app/package.json b/packages/app/package.json
index 6d87eb0..9b9ea2f 100644
--- a/packages/app/package.json
+++ b/packages/app/package.json
@@ -6,22 +6,21 @@
   "dependencies": {
-    "@backstage/app-defaults": "^0.1.1",
-    "@backstage/catalog-model": "^0.9.7",
-    "@backstage/cli": "^0.9.1",
-    "@backstage/core-app-api": "^0.1.23",
-    "@backstage/core-components": "^0.7.5",
-    "@backstage/core-plugin-api": "^0.2.1",
-    "@backstage/integration-react": "^0.1.14",
-    "@backstage/plugin-api-docs": "^0.6.15",
-    "@backstage/plugin-catalog": "^0.7.3",
-    "@backstage/plugin-catalog-import": "^0.7.4",
-    "@backstage/plugin-catalog-react": "^0.6.4",
-    "@backstage/plugin-github-actions": "^0.4.25",
-    "@backstage/plugin-org": "^0.3.29",
-    "@backstage/plugin-scaffolder": "^0.11.12",
-    "@backstage/plugin-search": "^0.4.18",
-    "@backstage/plugin-tech-radar": "^0.4.12",
-    "@backstage/plugin-techdocs": "^0.12.7",
-    "@backstage/plugin-user-settings": "^0.3.11",
-    "@backstage/test-utils": "^0.1.23",
-    "@backstage/theme": "^0.2.13",
+    "@backstage/app-defaults": "^0.1.3",
+    "@backstage/catalog-model": "^0.9.8",
+    "@backstage/cli": "^0.10.4",
+    "@backstage/core-app-api": "^0.3.0",
+    "@backstage/core-components": "^0.8.2",
+    "@backstage/core-plugin-api": "^0.4.0",
+    "@backstage/integration-react": "^0.1.17",
+    "@backstage/plugin-api-docs": "^0.6.20",
+    "@backstage/plugin-catalog": "^0.7.6",
+    "@backstage/plugin-catalog-import": "^0.7.7",
+    "@backstage/plugin-catalog-react": "^0.6.9",
+    "@backstage/plugin-github-actions": "^0.4.29",
+    "@backstage/plugin-org": "^0.3.32",
+    "@backstage/plugin-scaffolder": "^0.11.16",
+    "@backstage/plugin-search": "^0.5.3",
+    "@backstage/plugin-tech-radar": "^0.5.0",
+    "@backstage/plugin-techdocs": "^0.12.12",
+    "@backstage/plugin-user-settings": "^0.3.14",
+    "@backstage/theme": "^0.2.14",
     "@material-ui/core": "^4.12.2",
@@ -36,2 +35,3 @@
   "devDependencies": {
+    "@backstage/test-utils": "^0.2.1",
     "@testing-library/jest-dom": "^5.10.1",
@@ -50,7 +50,7 @@
     "build": "backstage-cli app:build",
-    "test": "backstage-cli test",
-    "lint": "backstage-cli lint",
     "clean": "backstage-cli clean",
+    "test": "backstage-cli test",
     "test:e2e": "cross-env PORT=3001 start-server-and-test start http://localhost:3001 cy:dev",
     "test:e2e:ci": "cross-env PORT=3001 start-server-and-test start http://localhost:3001 cy:run",
+    "lint": "backstage-cli lint",
     "cy:dev": "cypress open",
diff --git a/packages/app/public/index.html b/packages/app/public/index.html
index b93896c..a936c73 100644
--- a/packages/app/public/index.html
+++ b/packages/app/public/index.html
@@ -44,13 +44,7 @@
     />
-    <style>
-      #root {
-        min-height: 100%;
-      }
-    </style>
-    <title><%= app.title %></title>
-    <% if (app.googleAnalyticsTrackingId && typeof app.googleAnalyticsTrackingId
-    === 'string') { %>
+    <title><%= config.getString('app.title') %></title>
+    <% if (config.has('app.googleAnalyticsTrackingId')) { %>
     <script
       async
-      src="https://www.googletagmanager.com/gtag/js?id=<%= app.googleAnalyticsTrackingId %>"
+      src="https://www.googletagmanager.com/gtag/js?id=<%= config.getString('app.googleAnalyticsTrackingId') %>"
     ></script>
@@ -63,3 +57,6 @@
 
-      gtag('config', '<%= app.googleAnalyticsTrackingId %>');
+      gtag(
+        'config',
+        '<%= config.getString("app.googleAnalyticsTrackingId") %>',
+      );
     </script>
@@ -67,3 +64,3 @@
   </head>
-  <body style="margin: 0">
+  <body>
     <noscript>You need to enable JavaScript to run this app.</noscript>
diff --git a/packages/app/src/components/Root/Root.tsx b/packages/app/src/components/Root/Root.tsx
index ec59b0b..b4fa04f 100644
--- a/packages/app/src/components/Root/Root.tsx
+++ b/packages/app/src/components/Root/Root.tsx
@@ -27,3 +27,6 @@ import { NavLink } from 'react-router-dom';
 import { Settings as SidebarSettings } from '@backstage/plugin-user-settings';
-import { SidebarSearchModal } from '@backstage/plugin-search';
+import {
+  SidebarSearchModal,
+  SearchContextProvider,
+} from '@backstage/plugin-search';
 import {
@@ -76,3 +79,5 @@ export const Root = ({ children }: PropsWithChildren<{}>) => (
       <SidebarLogo />
-      <SidebarSearchModal />
+      <SearchContextProvider>
+        <SidebarSearchModal />
+      </SearchContextProvider>
       <SidebarDivider />
diff --git a/packages/app/src/components/search/SearchPage.tsx b/packages/app/src/components/search/SearchPage.tsx
index 50ffbad..cf380b6 100644
--- a/packages/app/src/components/search/SearchPage.tsx
+++ b/packages/app/src/components/search/SearchPage.tsx
@@ -13,3 +13,9 @@ import {
 } from '@backstage/plugin-search';
-import { Content, Header, Page } from '@backstage/core-components';
+import {
+  CatalogIcon,
+  Content,
+  DocsIcon,
+  Header,
+  Page,
+} from '@backstage/core-components';
 
@@ -21,2 +27,3 @@ const useStyles = makeStyles((theme: Theme) => ({
     padding: theme.spacing(2),
+    marginTop: theme.spacing(2),
   },
@@ -39,3 +46,3 @@ const SearchPage = () => {
             <Paper className={classes.bar}>
-              <SearchBar debounceTime={100} />
+              <SearchBar />
             </Paper>
@@ -43,8 +50,19 @@ const SearchPage = () => {
           <Grid item xs={3}>
+            <SearchType.Accordion
+              name="Result Type"
+              defaultValue="software-catalog"
+              types={[
+                {
+                  value: 'software-catalog',
+                  name: 'Software Catalog',
+                  icon: <CatalogIcon />,
+                },
+                {
+                  value: 'techdocs',
+                  name: 'Documentation',
+                  icon: <DocsIcon />,
+                },
+              ]}
+            />
             <Paper className={classes.filters}>
-              <SearchType
-                values={['techdocs', 'software-catalog']}
-                name="type"
-                defaultValue="software-catalog"
-              />
               <SearchFilter.Select
diff --git a/packages/backend/package.json b/packages/backend/package.json
index f5c3b2e..afdde8d 100644
--- a/packages/backend/package.json
+++ b/packages/backend/package.json
@@ -17,14 +17,15 @@
     "app": "0.0.0",
-    "@backstage/backend-common": "^0.9.11",
-    "@backstage/catalog-model": "^0.9.7",
-    "@backstage/catalog-client": "^0.5.2",
+    "@backstage/backend-common": "^0.10.1",
+    "@backstage/backend-tasks": "^0.1.1",
+    "@backstage/catalog-model": "^0.9.8",
+    "@backstage/catalog-client": "^0.5.3",
     "@backstage/config": "^0.1.11",
-    "@backstage/plugin-app-backend": "^0.3.19",
-    "@backstage/plugin-auth-backend": "^0.4.9",
-    "@backstage/plugin-catalog-backend": "^0.18.0",
-    "@backstage/plugin-proxy-backend": "^0.2.14",
-    "@backstage/plugin-scaffolder-backend": "^0.15.14",
-    "@backstage/plugin-search-backend": "^0.2.7",
+    "@backstage/plugin-app-backend": "^0.3.21",
+    "@backstage/plugin-auth-backend": "^0.6.0",
+    "@backstage/plugin-catalog-backend": "^0.19.4",
+    "@backstage/plugin-proxy-backend": "^0.2.15",
+    "@backstage/plugin-scaffolder-backend": "^0.15.19",
+    "@backstage/plugin-search-backend": "^0.3.0",
     "@backstage/plugin-search-backend-node": "^0.4.3",
-    "@backstage/plugin-techdocs-backend": "^0.10.9",
+    "@backstage/plugin-techdocs-backend": "^0.12.2",
     "@gitbeaker/node": "^34.6.0",
@@ -39,3 +40,3 @@
   "devDependencies": {
-    "@backstage/cli": "^0.9.1",
+    "@backstage/cli": "^0.10.4",
     "@types/dockerode": "^3.3.0",
diff --git a/packages/backend/src/index.ts b/packages/backend/src/index.ts
index f2b14b2..08d21e6 100644
--- a/packages/backend/src/index.ts
+++ b/packages/backend/src/index.ts
@@ -19,3 +19,5 @@ import {
   UrlReaders,
+  ServerTokenManager,
 } from '@backstage/backend-common';
+import { TaskScheduler } from '@backstage/backend-tasks';
 import { Config } from '@backstage/config';
@@ -34,7 +36,8 @@ function makeCreateEnv(config: Config) {
   const discovery = SingleHostDiscovery.fromConfig(config);
-
-  root.info(`Created UrlReader ${reader}`);
-
   const cacheManager = CacheManager.fromConfig(config);
   const databaseManager = DatabaseManager.fromConfig(config);
+  const tokenManager = ServerTokenManager.noop();
+  const taskScheduler = TaskScheduler.fromConfig(config);
+
+  root.info(`Created UrlReader ${reader}`);
 
@@ -44,3 +47,13 @@ function makeCreateEnv(config: Config) {
     const cache = cacheManager.forPlugin(plugin);
-    return { logger, database, cache, config, reader, discovery };
+    const scheduler = taskScheduler.forPlugin(plugin);
+    return {
+      logger,
+      database,
+      cache,
+      config,
+      reader,
+      discovery,
+      tokenManager,
+      scheduler,
+    };
   };
@@ -70,2 +83,4 @@ async function main() {
   apiRouter.use('/search', await search(searchEnv));
+
+  // Add backends ABOVE this line; this 404 handler is the catch-all fallback
   apiRouter.use(notFoundHandler());
diff --git a/packages/backend/src/plugins/search.ts b/packages/backend/src/plugins/search.ts
index 63e1962..f23b0c7 100644
--- a/packages/backend/src/plugins/search.ts
+++ b/packages/backend/src/plugins/search.ts
@@ -14,2 +14,3 @@ export default async function createPlugin({
   config,
+  tokenManager,
 }: PluginEnvironment) {
@@ -23,3 +24,6 @@ export default async function createPlugin({
     defaultRefreshIntervalSeconds: 600,
-    collator: DefaultCatalogCollator.fromConfig(config, { discovery }),
+    collator: DefaultCatalogCollator.fromConfig(config, {
+      discovery,
+      tokenManager,
+    }),
   });
@@ -29,3 +33,7 @@ export default async function createPlugin({
     defaultRefreshIntervalSeconds: 600,
-    collator: DefaultTechDocsCollator.fromConfig(config, { discovery, logger }),
+    collator: DefaultTechDocsCollator.fromConfig(config, {
+      discovery,
+      logger,
+      tokenManager,
+    }),
   });
diff --git a/packages/backend/src/plugins/techdocs.ts b/packages/backend/src/plugins/techdocs.ts
index 906d86d..054c64d 100644
--- a/packages/backend/src/plugins/techdocs.ts
+++ b/packages/backend/src/plugins/techdocs.ts
@@ -16,2 +16,3 @@ export default async function createPlugin({
   reader,
+  cache,
 }: PluginEnvironment): Promise<Router> {
@@ -51,2 +52,3 @@ export default async function createPlugin({
     discovery,
+    cache,
   });
diff --git a/packages/backend/src/types.ts b/packages/backend/src/types.ts
index 6c78a2a..c3d0158 100644
--- a/packages/backend/src/types.ts
+++ b/packages/backend/src/types.ts
@@ -6,4 +6,6 @@ import {
   PluginEndpointDiscovery,
+  TokenManager,
   UrlReader,
 } from '@backstage/backend-common';
+import { PluginTaskScheduler } from '@backstage/backend-tasks';
 
@@ -16,2 +18,4 @@ export type PluginEnvironment = {
   discovery: PluginEndpointDiscovery;
+  tokenManager: TokenManager;
+  scheduler: PluginTaskScheduler;
 };
