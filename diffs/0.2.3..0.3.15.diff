diff --git a/.dockerignore b/.dockerignore
new file mode 100644
index 0000000..63c9c34
--- /dev/null
+++ b/.dockerignore
@@ -0,0 +1,5 @@
+.git
+node_modules
+packages
+!packages/backend/dist
+plugins
diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml
deleted file mode 100644
index edc4ee9..0000000
--- a/.github/workflows/release.yml
+++ /dev/null
@@ -1,76 +0,0 @@
-name: Create new release diffs
-on:
-  workflow_dispatch:
-    inputs:
-      version:
-        description: "The version of Backstage to release. If missing, the latest version will be used"
-        required: false
-        default: ""
-jobs:
-  release:
-    name: Create release branch
-    runs-on: ubuntu-latest
-    env:
-      BACKSTAGE_APP_NAME: backstagediffapp
-    outputs:
-      backstage_version: ${{ steps.set-outputs.outputs.backstage_version }}
-    steps:
-      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
-      - name: Check out repository code
-        uses: actions/checkout@v2
-        with:
-          ref: "release-base"
-      - name: Set @backstage/create-app version
-        run: echo "CREATE_APP_VERSION=${INPUT_VERSION:-$(npm view @backstage/create-app version)}" >> $GITHUB_ENV
-      - name: Run @backstage/create-app
-        run: printf "$BACKSTAGE_APP_NAME\n\t" | npx @backstage/create-app@${CREATE_APP_VERSION} --skip-install
-      - name: Check current directory
-        run: pwd
-      - name: Move all the files into the root directory
-        run: cp -ar $(pwd)/$BACKSTAGE_APP_NAME/. $(pwd)
-      - name: Setup git bot user
-        run: |
-          git config user.name "github-actions[bot]"
-          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
-      - name: Add release
-        run: |
-          git checkout -b release/${CREATE_APP_VERSION}
-          git add .
-          git reset $BACKSTAGE_APP_NAME
-          git commit -m "Release ${CREATE_APP_VERSION}"
-          git push origin release/${CREATE_APP_VERSION}
-      - id: set-outputs
-        name: Set outputs
-        run: echo "::set-output name=backstage_version::$(echo $CREATE_APP_VERSION)"
-      - run: echo "üçè This job's status is ${{ job.status }}."
-  diff:
-    name: Create new diffs
-    runs-on: ubuntu-latest
-    needs: release
-    steps:
-      - name: Check out diffs branch
-        uses: actions/checkout@v2
-        with:
-          ref: "master"
-          fetch-depth: 0
-      - name: Create new diffs
-        run: |
-          for version in $(jq -r 'keys |.[]' < releases.json); do
-            echo "Creating diffs between version $version and $NEW_VERSION"
-            git diff -U1 origin/release/$version..origin/release/$NEW_VERSION > diffs/$version..$NEW_VERSION.diff
-          done
-          jq ".\"$NEW_VERSION\" = {}" < releases.json > _releases.json
-          mv _releases.json releases.json
-        env:
-          NEW_VERSION: ${{needs.release.outputs.backstage_version}}
-      - name: Setup git bot user
-        run: |
-          git config user.name "github-actions[bot]"
-          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
-      - name: Push the changes
-        run: |
-          git add .
-          git commit -m "Add release ${NEW_VERSION}"
-          git push
-        env:
-          NEW_VERSION: ${{needs.release.outputs.backstage_version}}
diff --git a/.gitignore b/.gitignore
index 5f5cc73..4adebc5 100644
--- a/.gitignore
+++ b/.gitignore
@@ -32,2 +32,5 @@ site
 # Local configuration files
-*.local.yaml
\ No newline at end of file
+*.local.yaml
+
+# Sensitive credentials
+*-credentials.yaml
diff --git a/LICENSE b/LICENSE
deleted file mode 100644
index 2c5e115..0000000
--- a/LICENSE
+++ /dev/null
@@ -1,201 +0,0 @@
-                              Apache License
-                        Version 2.0, January 2004
-                     http://www.apache.org/licenses/
-
-TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-1. Definitions.
-
-   "License" shall mean the terms and conditions for use, reproduction,
-   and distribution as defined by Sections 1 through 9 of this document.
-
-   "Licensor" shall mean the copyright owner or entity authorized by
-   the copyright owner that is granting the License.
-
-   "Legal Entity" shall mean the union of the acting entity and all
-   other entities that control, are controlled by, or are under common
-   control with that entity. For the purposes of this definition,
-   "control" means (i) the power, direct or indirect, to cause the
-   direction or management of such entity, whether by contract or
-   otherwise, or (ii) ownership of fifty percent (50%) or more of the
-   outstanding shares, or (iii) beneficial ownership of such entity.
-
-   "You" (or "Your") shall mean an individual or Legal Entity
-   exercising permissions granted by this License.
-
-   "Source" form shall mean the preferred form for making modifications,
-   including but not limited to software source code, documentation
-   source, and configuration files.
-
-   "Object" form shall mean any form resulting from mechanical
-   transformation or translation of a Source form, including but
-   not limited to compiled object code, generated documentation,
-   and conversions to other media types.
-
-   "Work" shall mean the work of authorship, whether in Source or
-   Object form, made available under the License, as indicated by a
-   copyright notice that is included in or attached to the work
-   (an example is provided in the Appendix below).
-
-   "Derivative Works" shall mean any work, whether in Source or Object
-   form, that is based on (or derived from) the Work and for which the
-   editorial revisions, annotations, elaborations, or other modifications
-   represent, as a whole, an original work of authorship. For the purposes
-   of this License, Derivative Works shall not include works that remain
-   separable from, or merely link (or bind by name) to the interfaces of,
-   the Work and Derivative Works thereof.
-
-   "Contribution" shall mean any work of authorship, including
-   the original version of the Work and any modifications or additions
-   to that Work or Derivative Works thereof, that is intentionally
-   submitted to Licensor for inclusion in the Work by the copyright owner
-   or by an individual or Legal Entity authorized to submit on behalf of
-   the copyright owner. For the purposes of this definition, "submitted"
-   means any form of electronic, verbal, or written communication sent
-   to the Licensor or its representatives, including but not limited to
-   communication on electronic mailing lists, source code control systems,
-   and issue tracking systems that are managed by, or on behalf of, the
-   Licensor for the purpose of discussing and improving the Work, but
-   excluding communication that is conspicuously marked or otherwise
-   designated in writing by the copyright owner as "Not a Contribution."
-
-   "Contributor" shall mean Licensor and any individual or Legal Entity
-   on behalf of whom a Contribution has been received by Licensor and
-   subsequently incorporated within the Work.
-
-2. Grant of Copyright License. Subject to the terms and conditions of
-   this License, each Contributor hereby grants to You a perpetual,
-   worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-   copyright license to reproduce, prepare Derivative Works of,
-   publicly display, publicly perform, sublicense, and distribute the
-   Work and such Derivative Works in Source or Object form.
-
-3. Grant of Patent License. Subject to the terms and conditions of
-   this License, each Contributor hereby grants to You a perpetual,
-   worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-   (except as stated in this section) patent license to make, have made,
-   use, offer to sell, sell, import, and otherwise transfer the Work,
-   where such license applies only to those patent claims licensable
-   by such Contributor that are necessarily infringed by their
-   Contribution(s) alone or by combination of their Contribution(s)
-   with the Work to which such Contribution(s) was submitted. If You
-   institute patent litigation against any entity (including a
-   cross-claim or counterclaim in a lawsuit) alleging that the Work
-   or a Contribution incorporated within the Work constitutes direct
-   or contributory patent infringement, then any patent licenses
-   granted to You under this License for that Work shall terminate
-   as of the date such litigation is filed.
-
-4. Redistribution. You may reproduce and distribute copies of the
-   Work or Derivative Works thereof in any medium, with or without
-   modifications, and in Source or Object form, provided that You
-   meet the following conditions:
-
-   (a) You must give any other recipients of the Work or
-       Derivative Works a copy of this License; and
-
-   (b) You must cause any modified files to carry prominent notices
-       stating that You changed the files; and
-
-   (c) You must retain, in the Source form of any Derivative Works
-       that You distribute, all copyright, patent, trademark, and
-       attribution notices from the Source form of the Work,
-       excluding those notices that do not pertain to any part of
-       the Derivative Works; and
-
-   (d) If the Work includes a "NOTICE" text file as part of its
-       distribution, then any Derivative Works that You distribute must
-       include a readable copy of the attribution notices contained
-       within such NOTICE file, excluding those notices that do not
-       pertain to any part of the Derivative Works, in at least one
-       of the following places: within a NOTICE text file distributed
-       as part of the Derivative Works; within the Source form or
-       documentation, if provided along with the Derivative Works; or,
-       within a display generated by the Derivative Works, if and
-       wherever such third-party notices normally appear. The contents
-       of the NOTICE file are for informational purposes only and
-       do not modify the License. You may add Your own attribution
-       notices within Derivative Works that You distribute, alongside
-       or as an addendum to the NOTICE text from the Work, provided
-       that such additional attribution notices cannot be construed
-       as modifying the License.
-
-   You may add Your own copyright statement to Your modifications and
-   may provide additional or different license terms and conditions
-   for use, reproduction, or distribution of Your modifications, or
-   for any such Derivative Works as a whole, provided Your use,
-   reproduction, and distribution of the Work otherwise complies with
-   the conditions stated in this License.
-
-5. Submission of Contributions. Unless You explicitly state otherwise,
-   any Contribution intentionally submitted for inclusion in the Work
-   by You to the Licensor shall be under the terms and conditions of
-   this License, without any additional terms or conditions.
-   Notwithstanding the above, nothing herein shall supersede or modify
-   the terms of any separate license agreement you may have executed
-   with Licensor regarding such Contributions.
-
-6. Trademarks. This License does not grant permission to use the trade
-   names, trademarks, service marks, or product names of the Licensor,
-   except as required for reasonable and customary use in describing the
-   origin of the Work and reproducing the content of the NOTICE file.
-
-7. Disclaimer of Warranty. Unless required by applicable law or
-   agreed to in writing, Licensor provides the Work (and each
-   Contributor provides its Contributions) on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-   implied, including, without limitation, any warranties or conditions
-   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-   PARTICULAR PURPOSE. You are solely responsible for determining the
-   appropriateness of using or redistributing the Work and assume any
-   risks associated with Your exercise of permissions under this License.
-
-8. Limitation of Liability. In no event and under no legal theory,
-   whether in tort (including negligence), contract, or otherwise,
-   unless required by applicable law (such as deliberate and grossly
-   negligent acts) or agreed to in writing, shall any Contributor be
-   liable to You for damages, including any direct, indirect, special,
-   incidental, or consequential damages of any character arising as a
-   result of this License or out of the use or inability to use the
-   Work (including but not limited to damages for loss of goodwill,
-   work stoppage, computer failure or malfunction, or any and all
-   other commercial damages or losses), even if such Contributor
-   has been advised of the possibility of such damages.
-
-9. Accepting Warranty or Additional Liability. While redistributing
-   the Work or Derivative Works thereof, You may choose to offer,
-   and charge a fee for, acceptance of support, warranty, indemnity,
-   or other liability obligations and/or rights consistent with this
-   License. However, in accepting such obligations, You may act only
-   on Your own behalf and on Your sole responsibility, not on behalf
-   of any other Contributor, and only if You agree to indemnify,
-   defend, and hold each Contributor harmless for any liability
-   incurred by, or claims asserted against, such Contributor by reason
-   of your accepting any such warranty or additional liability.
-
-END OF TERMS AND CONDITIONS
-
-APPENDIX: How to apply the Apache License to your work.
-
-   To apply the Apache License to your work, attach the following
-   boilerplate notice, with the fields enclosed by brackets "[]"
-   replaced with your own identifying information. (Don't include
-   the brackets!)  The text should be enclosed in the appropriate
-   comment syntax for the file format. We also recommend that a
-   file or class name and description of purpose be included on the
-   same "printed page" as the copyright notice for easier
-   identification within third-party archives.
-
-Copyright 2020 The Backstage Authors
-
-Licensed under the Apache License, Version 2.0 (the "License");
-you may not use this file except in compliance with the License.
-You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-Unless required by applicable law or agreed to in writing, software
-distributed under the License is distributed on an "AS IS" BASIS,
-WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-See the License for the specific language governing permissions and
-limitations under the License.
\ No newline at end of file
diff --git a/app-config.yaml b/app-config.yaml
index 269756c..8da6f21 100644
--- a/app-config.yaml
+++ b/app-config.yaml
@@ -38,10 +38,12 @@ proxy:
 
+# Reference documentation http://backstage.io/docs/features/techdocs/configuration
+# Note: After experimenting with basic setup, use CI/CD to generate docs
+# and an external cloud storage when deploying TechDocs for production use-case.
+# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
 techdocs:
-  storageUrl: http://localhost:7000/api/techdocs/static/docs
-  requestUrl: http://localhost:7000/api/techdocs
+  builder: 'local' # Alternatives - 'external'
   generators:
-    techdocs: 'docker'
-
-lighthouse:
-  baseUrl: http://localhost:3003
+    techdocs: 'docker' # Alternatives - 'local'
+  publisher:
+    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.
 
@@ -59,3 +61,3 @@ catalog:
   rules:
-    - allow: [Component, API, Group, User, Template, Location]
+    - allow: [Component, System, API, Group, User, Template, Location]
   locations:
@@ -65,2 +67,6 @@ catalog:
 
+    # Backstage example systems
+    - type: url
+      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-systems.yaml
+
     # Backstage example APIs
@@ -69,4 +75,10 @@ catalog:
 
+    # Backstage example organization groups
+    - type: url
+      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme/org.yaml
+      rules:
+        - allow: [Group, User]
+
     # Backstage example templates
-    - type: github
+    - type: url
       target: https://github.com/backstage/backstage/blob/master/plugins/scaffolder-backend/sample-templates/react-ssr-template/template.yaml
@@ -74,3 +86,3 @@ catalog:
         - allow: [Template]
-    - type: github
+    - type: url
       target: https://github.com/backstage/backstage/blob/master/plugins/scaffolder-backend/sample-templates/springboot-grpc-template/template.yaml
@@ -78,3 +90,3 @@ catalog:
         - allow: [Template]
-    - type: github
+    - type: url
       target: https://github.com/backstage/backstage/blob/master/plugins/scaffolder-backend/sample-templates/create-react-app/template.yaml
@@ -82,3 +94,3 @@ catalog:
         - allow: [Template]
-    - type: github
+    - type: url
       target: https://github.com/spotify/cookiecutter-golang/blob/master/template.yaml
@@ -86,3 +98,3 @@ catalog:
         - allow: [Template]
-    - type: github
+    - type: url
       target: https://github.com/backstage/backstage/blob/master/plugins/scaffolder-backend/sample-templates/docs-template/template.yaml
diff --git a/catalog-info.yaml b/catalog-info.yaml
index 41794b4..841a480 100644
--- a/catalog-info.yaml
+++ b/catalog-info.yaml
@@ -8,3 +8,3 @@ metadata:
     # github.com/project-slug: backstage/backstage
-    # backstage.io/techdocs-ref: github:https://github.com/backstage/backstage.git
+    # backstage.io/techdocs-ref: url:https://github.com/backstage/backstage
 spec:
diff --git a/diffs/0.1.1..0.2.0.diff b/diffs/0.1.1..0.2.0.diff
deleted file mode 100644
index ca6064d..0000000
--- a/diffs/0.1.1..0.2.0.diff
+++ /dev/null
@@ -1,77 +0,0 @@
-diff --git a/package.json b/package.json
-index b6fb091..db8ca15 100644
---- a/package.json
-+++ b/package.json
-@@ -28,3 +28,3 @@
-   "devDependencies": {
--    "@backstage/cli": "^0.1.1",
-+    "@backstage/cli": "^0.2.0",
-     "@spotify/prettier-config": "^7.0.0",
-diff --git a/packages/app/package.json b/packages/app/package.json
-index 3754d7e..985aa1e 100644
---- a/packages/app/package.json
-+++ b/packages/app/package.json
-@@ -8,18 +8,18 @@
-     "@material-ui/icons": "^4.9.1",
--    "@backstage/cli": "^0.1.1",
--    "@backstage/core": "^0.1.1",
--    "@backstage/plugin-api-docs": "^0.1.1",
--    "@backstage/plugin-catalog": "^0.1.1",
--    "@backstage/plugin-register-component": "^0.1.1",
--    "@backstage/plugin-scaffolder": "^0.1.1",
--    "@backstage/plugin-techdocs": "^0.1.1",
--    "@backstage/catalog-model": "^0.1.1",
--    "@backstage/plugin-circleci": "^0.1.1",
--    "@backstage/plugin-explore": "^0.1.1",
--    "@backstage/plugin-lighthouse": "^0.1.1",
--    "@backstage/plugin-tech-radar": "^0.1.1",
--    "@backstage/plugin-github-actions": "^0.1.1",
--    "@backstage/plugin-user-settings": "^0.1.1",
--    "@backstage/test-utils": "^0.1.1",
--    "@backstage/theme": "^0.1.1",
-+    "@backstage/cli": "^0.2.0",
-+    "@backstage/core": "^0.2.0",
-+    "@backstage/plugin-api-docs": "^0.2.0",
-+    "@backstage/plugin-catalog": "^0.2.0",
-+    "@backstage/plugin-register-component": "^0.2.0",
-+    "@backstage/plugin-scaffolder": "^0.2.0",
-+    "@backstage/plugin-techdocs": "^0.2.0",
-+    "@backstage/catalog-model": "^0.2.0",
-+    "@backstage/plugin-circleci": "^0.2.0",
-+    "@backstage/plugin-explore": "^0.2.0",
-+    "@backstage/plugin-lighthouse": "^0.2.0",
-+    "@backstage/plugin-tech-radar": "^0.2.0",
-+    "@backstage/plugin-github-actions": "^0.2.0",
-+    "@backstage/plugin-user-settings": "^0.2.0",
-+    "@backstage/test-utils": "^0.1.2",
-+    "@backstage/theme": "^0.2.0",
-     "history": "^5.0.0",
-diff --git a/packages/backend/package.json b/packages/backend/package.json
-index 413fa29..a6ddda7 100644
---- a/packages/backend/package.json
-+++ b/packages/backend/package.json
-@@ -19,11 +19,11 @@
-   "dependencies": {
--    "@backstage/backend-common": "^0.1.1",
--    "@backstage/catalog-model": "^0.1.1",
-+    "@backstage/backend-common": "^0.2.0",
-+    "@backstage/catalog-model": "^0.2.0",
-     "@backstage/config": "^0.1.1",
--    "@backstage/plugin-auth-backend": "^0.1.1",
--    "@backstage/plugin-catalog-backend": "^0.1.1",
--    "@backstage/plugin-proxy-backend": "^0.1.1",
--    "@backstage/plugin-rollbar-backend": "^0.1.1",
--    "@backstage/plugin-scaffolder-backend": "^0.1.1",
--    "@backstage/plugin-techdocs-backend": "^0.1.1",
-+    "@backstage/plugin-auth-backend": "^0.2.0",
-+    "@backstage/plugin-catalog-backend": "^0.2.0",
-+    "@backstage/plugin-proxy-backend": "^0.2.0",
-+    "@backstage/plugin-rollbar-backend": "^0.1.2",
-+    "@backstage/plugin-scaffolder-backend": "^0.2.0",
-+    "@backstage/plugin-techdocs-backend": "^0.2.0",
-     "@octokit/rest": "^18.0.0",
-@@ -38,3 +38,3 @@
-   "devDependencies": {
--    "@backstage/cli": "^0.1.1",
-+    "@backstage/cli": "^0.2.0",
-     "@types/dockerode": "^2.5.32",
diff --git a/diffs/0.1.1..0.2.1.diff b/diffs/0.1.1..0.2.1.diff
deleted file mode 100644
index f813e20..0000000
--- a/diffs/0.1.1..0.2.1.diff
+++ /dev/null
@@ -1,108 +0,0 @@
-diff --git a/package.json b/package.json
-index b6fb091..db8ca15 100644
---- a/package.json
-+++ b/package.json
-@@ -28,3 +28,3 @@
-   "devDependencies": {
--    "@backstage/cli": "^0.1.1",
-+    "@backstage/cli": "^0.2.0",
-     "@spotify/prettier-config": "^7.0.0",
-diff --git a/packages/app/package.json b/packages/app/package.json
-index 3754d7e..5a3a236 100644
---- a/packages/app/package.json
-+++ b/packages/app/package.json
-@@ -8,18 +8,18 @@
-     "@material-ui/icons": "^4.9.1",
--    "@backstage/cli": "^0.1.1",
--    "@backstage/core": "^0.1.1",
--    "@backstage/plugin-api-docs": "^0.1.1",
--    "@backstage/plugin-catalog": "^0.1.1",
--    "@backstage/plugin-register-component": "^0.1.1",
--    "@backstage/plugin-scaffolder": "^0.1.1",
--    "@backstage/plugin-techdocs": "^0.1.1",
--    "@backstage/catalog-model": "^0.1.1",
--    "@backstage/plugin-circleci": "^0.1.1",
--    "@backstage/plugin-explore": "^0.1.1",
--    "@backstage/plugin-lighthouse": "^0.1.1",
--    "@backstage/plugin-tech-radar": "^0.1.1",
--    "@backstage/plugin-github-actions": "^0.1.1",
--    "@backstage/plugin-user-settings": "^0.1.1",
--    "@backstage/test-utils": "^0.1.1",
--    "@backstage/theme": "^0.1.1",
-+    "@backstage/cli": "^0.2.0",
-+    "@backstage/core": "^0.3.0",
-+    "@backstage/plugin-api-docs": "^0.2.1",
-+    "@backstage/plugin-catalog": "^0.2.1",
-+    "@backstage/plugin-register-component": "^0.2.1",
-+    "@backstage/plugin-scaffolder": "^0.3.0",
-+    "@backstage/plugin-techdocs": "^0.2.1",
-+    "@backstage/catalog-model": "^0.2.0",
-+    "@backstage/plugin-circleci": "^0.2.1",
-+    "@backstage/plugin-explore": "^0.2.1",
-+    "@backstage/plugin-lighthouse": "^0.2.1",
-+    "@backstage/plugin-tech-radar": "^0.3.0",
-+    "@backstage/plugin-github-actions": "^0.2.1",
-+    "@backstage/plugin-user-settings": "^0.2.1",
-+    "@backstage/test-utils": "^0.1.2",
-+    "@backstage/theme": "^0.2.1",
-     "history": "^5.0.0",
-diff --git a/packages/app/src/plugins.ts b/packages/app/src/plugins.ts
-index c787ac2..b719594 100644
---- a/packages/app/src/plugins.ts
-+++ b/packages/app/src/plugins.ts
-@@ -1 +1,2 @@
-+export { plugin as ApiDocs } from '@backstage/plugin-api-docs';
- export { plugin as CatalogPlugin } from '@backstage/plugin-catalog';
-diff --git a/packages/backend/package.json b/packages/backend/package.json
-index 413fa29..b2f24a8 100644
---- a/packages/backend/package.json
-+++ b/packages/backend/package.json
-@@ -19,13 +19,13 @@
-   "dependencies": {
--    "@backstage/backend-common": "^0.1.1",
--    "@backstage/catalog-model": "^0.1.1",
-+    "@backstage/backend-common": "^0.2.1",
-+    "@backstage/catalog-model": "^0.2.0",
-     "@backstage/config": "^0.1.1",
--    "@backstage/plugin-auth-backend": "^0.1.1",
--    "@backstage/plugin-catalog-backend": "^0.1.1",
--    "@backstage/plugin-proxy-backend": "^0.1.1",
--    "@backstage/plugin-rollbar-backend": "^0.1.1",
--    "@backstage/plugin-scaffolder-backend": "^0.1.1",
--    "@backstage/plugin-techdocs-backend": "^0.1.1",
-+    "@backstage/plugin-auth-backend": "^0.2.1",
-+    "@backstage/plugin-catalog-backend": "^0.2.0",
-+    "@backstage/plugin-proxy-backend": "^0.2.0",
-+    "@backstage/plugin-rollbar-backend": "^0.1.2",
-+    "@backstage/plugin-scaffolder-backend": "^0.3.0",
-+    "@backstage/plugin-techdocs-backend": "^0.2.0",
-     "@octokit/rest": "^18.0.0",
--    "@gitbeaker/node": "^23.5.0",
-+    "@gitbeaker/node": "^25.2.0",
-     "dockerode": "^3.2.0",
-@@ -38,3 +38,3 @@
-   "devDependencies": {
--    "@backstage/cli": "^0.1.1",
-+    "@backstage/cli": "^0.2.0",
-     "@types/dockerode": "^2.5.32",
-diff --git a/packages/backend/src/plugins/scaffolder.ts b/packages/backend/src/plugins/scaffolder.ts
-index 8de1592..2dc69fe 100644
---- a/packages/backend/src/plugins/scaffolder.ts
-+++ b/packages/backend/src/plugins/scaffolder.ts
-@@ -13,3 +13,5 @@ import {
-   RepoVisibilityOptions,
-+  CatalogEntityClient,
- } from '@backstage/plugin-scaffolder-backend';
-+import { SingleHostDiscovery } from '@backstage/backend-common';
- import { Octokit } from '@octokit/rest';
-@@ -99,2 +101,6 @@ export default async function createPlugin({
-   const dockerClient = new Docker();
-+
-+  const discovery = SingleHostDiscovery.fromConfig(config);
-+  const entityClient = new CatalogEntityClient({ discovery });
-+
-   return await createRouter({
-@@ -106,2 +112,3 @@ export default async function createPlugin({
-     dockerClient,
-+    entityClient,
-   });
diff --git a/diffs/0.2.0..0.2.1.diff b/diffs/0.2.0..0.2.1.diff
deleted file mode 100644
index 852f136..0000000
--- a/diffs/0.2.0..0.2.1.diff
+++ /dev/null
@@ -1,85 +0,0 @@
-diff --git a/packages/app/package.json b/packages/app/package.json
-index 985aa1e..5a3a236 100644
---- a/packages/app/package.json
-+++ b/packages/app/package.json
-@@ -9,17 +9,17 @@
-     "@backstage/cli": "^0.2.0",
--    "@backstage/core": "^0.2.0",
--    "@backstage/plugin-api-docs": "^0.2.0",
--    "@backstage/plugin-catalog": "^0.2.0",
--    "@backstage/plugin-register-component": "^0.2.0",
--    "@backstage/plugin-scaffolder": "^0.2.0",
--    "@backstage/plugin-techdocs": "^0.2.0",
-+    "@backstage/core": "^0.3.0",
-+    "@backstage/plugin-api-docs": "^0.2.1",
-+    "@backstage/plugin-catalog": "^0.2.1",
-+    "@backstage/plugin-register-component": "^0.2.1",
-+    "@backstage/plugin-scaffolder": "^0.3.0",
-+    "@backstage/plugin-techdocs": "^0.2.1",
-     "@backstage/catalog-model": "^0.2.0",
--    "@backstage/plugin-circleci": "^0.2.0",
--    "@backstage/plugin-explore": "^0.2.0",
--    "@backstage/plugin-lighthouse": "^0.2.0",
--    "@backstage/plugin-tech-radar": "^0.2.0",
--    "@backstage/plugin-github-actions": "^0.2.0",
--    "@backstage/plugin-user-settings": "^0.2.0",
-+    "@backstage/plugin-circleci": "^0.2.1",
-+    "@backstage/plugin-explore": "^0.2.1",
-+    "@backstage/plugin-lighthouse": "^0.2.1",
-+    "@backstage/plugin-tech-radar": "^0.3.0",
-+    "@backstage/plugin-github-actions": "^0.2.1",
-+    "@backstage/plugin-user-settings": "^0.2.1",
-     "@backstage/test-utils": "^0.1.2",
--    "@backstage/theme": "^0.2.0",
-+    "@backstage/theme": "^0.2.1",
-     "history": "^5.0.0",
-diff --git a/packages/app/src/plugins.ts b/packages/app/src/plugins.ts
-index c787ac2..b719594 100644
---- a/packages/app/src/plugins.ts
-+++ b/packages/app/src/plugins.ts
-@@ -1 +1,2 @@
-+export { plugin as ApiDocs } from '@backstage/plugin-api-docs';
- export { plugin as CatalogPlugin } from '@backstage/plugin-catalog';
-diff --git a/packages/backend/package.json b/packages/backend/package.json
-index a6ddda7..b2f24a8 100644
---- a/packages/backend/package.json
-+++ b/packages/backend/package.json
-@@ -19,6 +19,6 @@
-   "dependencies": {
--    "@backstage/backend-common": "^0.2.0",
-+    "@backstage/backend-common": "^0.2.1",
-     "@backstage/catalog-model": "^0.2.0",
-     "@backstage/config": "^0.1.1",
--    "@backstage/plugin-auth-backend": "^0.2.0",
-+    "@backstage/plugin-auth-backend": "^0.2.1",
-     "@backstage/plugin-catalog-backend": "^0.2.0",
-@@ -26,6 +26,6 @@
-     "@backstage/plugin-rollbar-backend": "^0.1.2",
--    "@backstage/plugin-scaffolder-backend": "^0.2.0",
-+    "@backstage/plugin-scaffolder-backend": "^0.3.0",
-     "@backstage/plugin-techdocs-backend": "^0.2.0",
-     "@octokit/rest": "^18.0.0",
--    "@gitbeaker/node": "^23.5.0",
-+    "@gitbeaker/node": "^25.2.0",
-     "dockerode": "^3.2.0",
-diff --git a/packages/backend/src/plugins/scaffolder.ts b/packages/backend/src/plugins/scaffolder.ts
-index 8de1592..2dc69fe 100644
---- a/packages/backend/src/plugins/scaffolder.ts
-+++ b/packages/backend/src/plugins/scaffolder.ts
-@@ -13,3 +13,5 @@ import {
-   RepoVisibilityOptions,
-+  CatalogEntityClient,
- } from '@backstage/plugin-scaffolder-backend';
-+import { SingleHostDiscovery } from '@backstage/backend-common';
- import { Octokit } from '@octokit/rest';
-@@ -99,2 +101,6 @@ export default async function createPlugin({
-   const dockerClient = new Docker();
-+
-+  const discovery = SingleHostDiscovery.fromConfig(config);
-+  const entityClient = new CatalogEntityClient({ discovery });
-+
-   return await createRouter({
-@@ -106,2 +112,3 @@ export default async function createPlugin({
-     dockerClient,
-+    entityClient,
-   });
diff --git a/package.json b/package.json
index 77fec40..26c5585 100644
--- a/package.json
+++ b/package.json
@@ -8,3 +8,5 @@
   "scripts": {
+    "dev": "concurrently \"yarn start\" \"yarn start-backend\"",
     "start": "yarn workspace app start",
+    "start-backend": "yarn workspace backend start",
     "build": "lerna run build",
@@ -29,5 +31,6 @@
   "devDependencies": {
-    "@backstage/cli": "^0.4.0",
+    "@backstage/cli": "^0.6.6",
     "@spotify/prettier-config": "^7.0.0",
-    "lerna": "^3.20.2",
+    "concurrently": "^6.0.0",
+    "lerna": "^4.0.0",
     "prettier": "^1.19.1"
@@ -46,3 +49,3 @@
     "transformModules": [
-      "@kyma-project/asyncapi-react"
+      "@asyncapi/react-component"
     ]
diff --git a/packages/app/package.json b/packages/app/package.json
index 8272bd0..6c21964 100644
--- a/packages/app/package.json
+++ b/packages/app/package.json
@@ -6,19 +6,21 @@
   "dependencies": {
+    "@backstage/catalog-model": "^0.7.4",
+    "@backstage/cli": "^0.6.6",
+    "@backstage/core": "^0.7.3",
+    "@backstage/integration-react": "^0.1.1",
+    "@backstage/plugin-api-docs": "^0.4.9",
+    "@backstage/plugin-catalog": "^0.5.1",
+    "@backstage/plugin-catalog-import": "^0.5.0",
+    "@backstage/plugin-catalog-react": "^0.1.3",
+    "@backstage/plugin-github-actions": "^0.4.2",
+    "@backstage/plugin-org": "^0.3.10",
+    "@backstage/plugin-scaffolder": "^0.8.0",
+    "@backstage/plugin-search": "^0.3.4",
+    "@backstage/plugin-tech-radar": "^0.3.8",
+    "@backstage/plugin-techdocs": "^0.7.0",
+    "@backstage/plugin-user-settings": "^0.2.8",
+    "@backstage/test-utils": "^0.1.9",
+    "@backstage/theme": "^0.2.5",
     "@material-ui/core": "^4.11.0",
     "@material-ui/icons": "^4.9.1",
-    "@backstage/cli": "^0.4.0",
-    "@backstage/core": "^0.3.2",
-    "@backstage/plugin-api-docs": "^0.3.1",
-    "@backstage/plugin-catalog": "^0.2.5",
-    "@backstage/plugin-register-component": "^0.2.3",
-    "@backstage/plugin-scaffolder": "^0.3.2",
-    "@backstage/plugin-techdocs": "^0.3.1",
-    "@backstage/catalog-model": "^0.4.0",
-    "@backstage/plugin-circleci": "^0.2.3",
-    "@backstage/plugin-lighthouse": "^0.2.4",
-    "@backstage/plugin-tech-radar": "^0.3.0",
-    "@backstage/plugin-github-actions": "^0.2.3",
-    "@backstage/plugin-user-settings": "^0.2.2",
-    "@backstage/test-utils": "^0.1.4",
-    "@backstage/theme": "^0.2.1",
     "history": "^5.0.0",
@@ -35,3 +37,3 @@
     "@types/jest": "^26.0.7",
-    "@types/node": "^12.0.0",
+    "@types/node": "^14.14.32",
     "@types/react-dom": "^16.9.8",
@@ -47,2 +49,3 @@
     "lint": "backstage-cli lint",
+    "clean": "backstage-cli clean",
     "test:e2e": "cross-env PORT=3001 start-server-and-test start http://localhost:3001 cy:dev",
@@ -63,3 +66,6 @@
     ]
-  }
+  },
+  "files": [
+    "dist"
+  ]
 }
diff --git a/packages/app/public/index.html b/packages/app/public/index.html
index ea9208c..5653173 100644
--- a/packages/app/public/index.html
+++ b/packages/app/public/index.html
@@ -50,2 +50,18 @@
     <title><%= app.title %></title>
+    <% if (app.googleAnalyticsTrackingId && typeof app.googleAnalyticsTrackingId
+    === 'string') { %>
+    <script
+      async
+      src="https://www.googletagmanager.com/gtag/js?id=<%= app.googleAnalyticsTrackingId %>"
+    ></script>
+    <script>
+      window.dataLayer = window.dataLayer || [];
+      function gtag() {
+        dataLayer.push(arguments);
+      }
+      gtag('js', new Date());
+
+      gtag('config', '<%= app.googleAnalyticsTrackingId %>');
+    </script>
+    <% } %>
   </head>
diff --git a/packages/app/src/App.test.tsx b/packages/app/src/App.test.tsx
index 21a2eaa..82bc479 100644
--- a/packages/app/src/App.test.tsx
+++ b/packages/app/src/App.test.tsx
@@ -6,5 +6,5 @@ describe('App', () => {
   it('should render', async () => {
-    Object.defineProperty(process.env, 'APP_CONFIG', {
-      configurable: true,
-      value: [
+    process.env = {
+      NODE_ENV: 'test',
+      APP_CONFIG: [
         {
@@ -19,4 +19,4 @@ describe('App', () => {
         },
-      ],
-    });
+      ] as any,
+    };
 
diff --git a/packages/app/src/App.tsx b/packages/app/src/App.tsx
index 9449ac6..1cd7b77 100644
--- a/packages/app/src/App.tsx
+++ b/packages/app/src/App.tsx
@@ -1,19 +1,25 @@
-import React, { FC } from 'react';
+import React from 'react';
+import { Navigate, Route } from 'react-router';
 import {
-  createApp,
   AlertDisplay,
+  createApp,
+  FlatRoutes,
   OAuthRequestDialog,
-  SidebarPage,
-  createRouteRef,
 } from '@backstage/core';
+import { apiDocsPlugin, ApiExplorerPage } from '@backstage/plugin-api-docs';
+import {
+  CatalogEntityPage,
+  CatalogIndexPage,
+  catalogPlugin,
+} from '@backstage/plugin-catalog';
+import { CatalogImportPage } from '@backstage/plugin-catalog-import';
+import { ScaffolderPage, scaffolderPlugin } from '@backstage/plugin-scaffolder';
+import { SearchPage } from '@backstage/plugin-search';
+import { TechRadarPage } from '@backstage/plugin-tech-radar';
+import { TechdocsPage } from '@backstage/plugin-techdocs';
+import { UserSettingsPage } from '@backstage/plugin-user-settings';
 import { apis } from './apis';
-import * as plugins from './plugins';
-import { AppSidebar } from './sidebar';
-import { Route, Routes, Navigate } from 'react-router';
-import { Router as CatalogRouter } from '@backstage/plugin-catalog';
-import { Router as DocsRouter } from '@backstage/plugin-techdocs';
-import { Router as RegisterComponentRouter } from '@backstage/plugin-register-component';
-import { Router as TechRadarRouter } from '@backstage/plugin-tech-radar';
-
 import { EntityPage } from './components/catalog/EntityPage';
+import { Root } from './components/Root';
+import * as plugins from './plugins';
 
@@ -22,2 +28,10 @@ const app = createApp({
   plugins: Object.values(plugins),
+  bindRoutes({ bind }) {
+    bind(catalogPlugin.externalRoutes, {
+      createComponent: scaffolderPlugin.routes.root,
+    });
+    bind(apiDocsPlugin.externalRoutes, {
+      createComponent: scaffolderPlugin.routes.root,
+    });
+  },
 });
@@ -26,11 +40,27 @@ const AppProvider = app.getProvider();
 const AppRouter = app.getRouter();
-const deprecatedAppRoutes = app.getRoutes();
-
-const catalogRouteRef = createRouteRef({
-  path: '/catalog',
-  title: 'Service Catalog',
-});
 
+const routes = (
+  <FlatRoutes>
+    <Navigate key="/" to="/catalog" />
+    <Route path="/catalog" element={<CatalogIndexPage />} />
+    <Route
+      path="/catalog/:namespace/:kind/:name"
+      element={<CatalogEntityPage />}
+    >
+      <EntityPage />
+    </Route>
+    <Route path="/docs" element={<TechdocsPage />} />
+    <Route path="/create" element={<ScaffolderPage />} />
+    <Route path="/api-docs" element={<ApiExplorerPage />} />
+    <Route
+      path="/tech-radar"
+      element={<TechRadarPage width={1500} height={800} />}
+    />
+    <Route path="/catalog-import" element={<CatalogImportPage />} />
+    <Route path="/search" element={<SearchPage />} />
+    <Route path="/settings" element={<UserSettingsPage />} />
+  </FlatRoutes>
+);
 
-const App: FC<{}> = () => (
+const App = () => (
   <AppProvider>
@@ -39,22 +69,3 @@ const App: FC<{}> = () => (
     <AppRouter>
-      <SidebarPage>
-        <AppSidebar />
-        <Routes>
-          <Navigate key="/" to="/catalog" />
-          <Route
-            path="/catalog/*"
-            element={<CatalogRouter EntityPage={EntityPage} />}
-          />
-          <Route path="/docs/*" element={<DocsRouter />} />
-          <Route
-            path="/tech-radar"
-            element={<TechRadarRouter width={1500} height={800} />}
-          />
-          <Route
-            path="/register-component"
-            element={<RegisterComponentRouter catalogRouteRef={catalogRouteRef} />}
-          />
-          {deprecatedAppRoutes}
-        </Routes>
-      </SidebarPage>
+      <Root>{routes}</Root>
     </AppRouter>
diff --git a/packages/app/src/apis.ts b/packages/app/src/apis.ts
index 24b22a8..d803416 100644
--- a/packages/app/src/apis.ts
+++ b/packages/app/src/apis.ts
@@ -1 +1,14 @@
-export const apis = [];
+import {
+  AnyApiFactory, configApiRef, createApiFactory
+} from '@backstage/core';
+import {
+  ScmIntegrationsApi, scmIntegrationsApiRef
+} from '@backstage/integration-react';
+
+export const apis: AnyApiFactory[] = [
+  createApiFactory({
+    api: scmIntegrationsApiRef,
+    deps: { configApi: configApiRef },
+    factory: ({ configApi }) => ScmIntegrationsApi.fromConfig(configApi),
+  }),
+];
diff --git a/packages/app/src/LogoFull.tsx b/packages/app/src/components/Root/LogoFull.tsx
similarity index 99%
rename from packages/app/src/LogoFull.tsx
rename to packages/app/src/components/Root/LogoFull.tsx
index d2b1bf1..2fb7674 100644
--- a/packages/app/src/LogoFull.tsx
+++ b/packages/app/src/components/Root/LogoFull.tsx
@@ -16,3 +16,3 @@
 
-import React, { FC } from 'react';
+import React from 'react';
 import { makeStyles } from '@material-ui/core';
@@ -28,3 +28,3 @@ const useStyles = makeStyles({
 });
-const LogoFull: FC<{}> = () => {
+const LogoFull = () => {
   const classes = useStyles();
diff --git a/packages/app/src/LogoIcon.tsx b/packages/app/src/components/Root/LogoIcon.tsx
similarity index 98%
rename from packages/app/src/LogoIcon.tsx
rename to packages/app/src/components/Root/LogoIcon.tsx
index d70be3d..507e47d 100644
--- a/packages/app/src/LogoIcon.tsx
+++ b/packages/app/src/components/Root/LogoIcon.tsx
@@ -16,3 +16,3 @@
 
-import React, { FC } from 'react';
+import React from 'react';
 import { makeStyles } from '@material-ui/core';
@@ -29,3 +29,3 @@ const useStyles = makeStyles({
 
-const LogoIcon: FC<{}> = () => {
+const LogoIcon = () => {
   const classes = useStyles();
diff --git a/packages/app/src/components/Root/Root.tsx b/packages/app/src/components/Root/Root.tsx
new file mode 100644
index 0000000..9c07e0c
--- /dev/null
+++ b/packages/app/src/components/Root/Root.tsx
@@ -0,0 +1,92 @@
+/*
+ * Copyright 2020 Spotify AB
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+import React, { useContext, PropsWithChildren } from 'react';
+import { Link, makeStyles } from '@material-ui/core';
+import HomeIcon from '@material-ui/icons/Home';
+import ExtensionIcon from '@material-ui/icons/Extension';
+import MapIcon from '@material-ui/icons/MyLocation';
+import LibraryBooks from '@material-ui/icons/LibraryBooks';
+import CreateComponentIcon from '@material-ui/icons/AddCircleOutline';
+import LogoFull from './LogoFull';
+import LogoIcon from './LogoIcon';
+import {
+  Sidebar,
+  SidebarPage,
+  sidebarConfig,
+  SidebarContext,
+  SidebarItem,
+  SidebarDivider,
+  SidebarSpace,
+} from '@backstage/core';
+import { NavLink } from 'react-router-dom';
+import { Settings as SidebarSettings } from '@backstage/plugin-user-settings';
+import { SidebarSearch } from '@backstage/plugin-search';
+
+const useSidebarLogoStyles = makeStyles({
+  root: {
+    width: sidebarConfig.drawerWidthClosed,
+    height: 3 * sidebarConfig.logoHeight,
+    display: 'flex',
+    flexFlow: 'row nowrap',
+    alignItems: 'center',
+    marginBottom: -14,
+  },
+  link: {
+    width: sidebarConfig.drawerWidthClosed,
+    marginLeft: 24,
+  },
+});
+
+const SidebarLogo = () => {
+  const classes = useSidebarLogoStyles();
+  const { isOpen } = useContext(SidebarContext);
+
+  return (
+    <div className={classes.root}>
+      <Link
+        component={NavLink}
+        to="/"
+        underline="none"
+        className={classes.link}
+      >
+        {isOpen ? <LogoFull /> : <LogoIcon />}
+      </Link>
+    </div>
+  );
+};
+
+export const Root = ({ children }: PropsWithChildren<{}>) => (
+  <SidebarPage>
+    <Sidebar>
+      <SidebarLogo />
+      <SidebarSearch />
+      <SidebarDivider />
+      {/* Global nav, not org-specific */}
+      <SidebarItem icon={HomeIcon} to="/catalog" text="Home" />
+      <SidebarItem icon={ExtensionIcon} to="api-docs" text="APIs" />
+      <SidebarItem icon={LibraryBooks} to="docs" text="Docs" />
+      <SidebarItem icon={CreateComponentIcon} to="create" text="Create..." />
+      {/* End global nav */}
+      <SidebarDivider />
+      <SidebarItem icon={MapIcon} to="tech-radar" text="Tech Radar" />
+      <SidebarSpace />
+      <SidebarDivider />
+      <SidebarSettings />
+    </Sidebar>
+    {children}
+  </SidebarPage>
+);
diff --git a/packages/app/src/components/Root/index.ts b/packages/app/src/components/Root/index.ts
new file mode 100644
index 0000000..ab65cb2
--- /dev/null
+++ b/packages/app/src/components/Root/index.ts
@@ -0,0 +1,17 @@
+/*
+ * Copyright 2020 Spotify AB
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+export { Root } from './Root';
diff --git a/packages/app/src/components/catalog/EntityPage.tsx b/packages/app/src/components/catalog/EntityPage.tsx
index 7d65b32..d05f6bf 100644
--- a/packages/app/src/components/catalog/EntityPage.tsx
+++ b/packages/app/src/components/catalog/EntityPage.tsx
@@ -15,22 +15,40 @@
  */
+import React from 'react';
+import { Button, Grid } from '@material-ui/core';
+import {
+  ApiEntity,
+  DomainEntity,
+  Entity,
+  GroupEntity,
+  SystemEntity,
+  UserEntity,
+} from '@backstage/catalog-model';
+import { EmptyState } from '@backstage/core';
+import {
+  ApiDefinitionCard,
+  ConsumedApisCard,
+  ConsumingComponentsCard,
+  EntityHasApisCard,
+  ProvidedApisCard,
+  ProvidingComponentsCard,
+} from '@backstage/plugin-api-docs';
+import {
+  AboutCard,
+  EntityHasComponentsCard,
+  EntityHasSystemsCard,
+  EntityPageLayout,
+} from '@backstage/plugin-catalog';
+import { useEntity } from '@backstage/plugin-catalog-react';
 import {
-  Router as GitHubActionsRouter,
   isPluginApplicableToEntity as isGitHubActionsAvailable,
+  Router as GitHubActionsRouter,
 } from '@backstage/plugin-github-actions';
 import {
-  Router as CircleCIRouter,
-  isPluginApplicableToEntity as isCircleCIAvailable,
-} from '@backstage/plugin-circleci';
-import { Router as ApiDocsRouter } from '@backstage/plugin-api-docs';
+  GroupProfileCard,
+  MembersListCard,
+  OwnershipCard,
+  UserProfileCard,
+} from '@backstage/plugin-org';
 import { EmbeddedDocsRouter as DocsRouter } from '@backstage/plugin-techdocs';
 
-import React from 'react';
-import {
-  EntityPageLayout,
-  useEntity,
-  AboutCard,
-} from '@backstage/plugin-catalog';
-import { Entity } from '@backstage/catalog-model';
-import { Grid } from '@material-ui/core';
-import { WarningPanel } from '@backstage/core';
 
@@ -42,10 +60,18 @@ const CICDSwitcher = ({ entity }: { entity: Entity }) => {
       return <GitHubActionsRouter entity={entity} />;
-    case isCircleCIAvailable(entity):
-      return <CircleCIRouter entity={entity} />;
     default:
       return (
-        <WarningPanel title="CI/CD switcher:">
-          No CI/CD is available for this entity. Check corresponding
-          annotations!
-        </WarningPanel>
+        <EmptyState
+          title="No CI/CD available for this entity"
+          missing="info"
+          description="You need to add an annotation to your component if you want to enable CI/CD for it. You can read more about annotations in Backstage by clicking the button below."
+          action={
+            <Button
+              variant="contained"
+              color="primary"
+              href="https://backstage.io/docs/features/software-catalog/well-known-annotations"
+            >
+              Read more
+            </Button>
+          }
+        />
       );
@@ -56,3 +82,3 @@ const OverviewContent = ({ entity }: { entity: Entity }) => (
   <Grid container spacing={3} alignItems="stretch">
-    <Grid item>
+    <Grid item md={6}>
       <AboutCard entity={entity} variant="gridItem" />
@@ -62,2 +88,13 @@ const OverviewContent = ({ entity }: { entity: Entity }) => (
 
+const ComponentApisContent = ({ entity }: { entity: Entity }) => (
+  <Grid container spacing={3} alignItems="stretch">
+    <Grid item md={6}>
+      <ProvidedApisCard entity={entity} />
+    </Grid>
+    <Grid item md={6}>
+      <ConsumedApisCard entity={entity} />
+    </Grid>
+  </Grid>
+);
+
 const ServiceEntityPage = ({ entity }: { entity: Entity }) => (
@@ -77,3 +114,3 @@ const ServiceEntityPage = ({ entity }: { entity: Entity }) => (
       title="API"
-      element={<ApiDocsRouter entity={entity} />}
+      element={<ComponentApisContent entity={entity} />}
     />
@@ -122,4 +159,3 @@ const DefaultEntityPage = ({ entity }: { entity: Entity }) => (
 
-export const EntityPage = () => {
-  const { entity } = useEntity();
+export const ComponentEntityPage = ({ entity }: { entity: Entity }) => {
   switch (entity?.spec?.type) {
@@ -133 +169,154 @@ export const EntityPage = () => {
 };
+
+const ApiOverviewContent = ({ entity }: { entity: Entity }) => (
+  <Grid container spacing={3}>
+    <Grid item md={6}>
+      <AboutCard entity={entity} />
+    </Grid>
+    <Grid container item md={12}>
+      <Grid item md={6}>
+        <ProvidingComponentsCard entity={entity} />
+      </Grid>
+      <Grid item md={6}>
+        <ConsumingComponentsCard entity={entity} />
+      </Grid>
+    </Grid>
+  </Grid>
+);
+
+const ApiDefinitionContent = ({ entity }: { entity: ApiEntity }) => (
+  <Grid container spacing={3}>
+    <Grid item xs={12}>
+      <ApiDefinitionCard apiEntity={entity} />
+    </Grid>
+  </Grid>
+);
+
+const ApiEntityPage = ({ entity }: { entity: Entity }) => (
+  <EntityPageLayout>
+    <EntityPageLayout.Content
+      path="/*"
+      title="Overview"
+      element={<ApiOverviewContent entity={entity} />}
+    />
+    <EntityPageLayout.Content
+      path="/definition/*"
+      title="Definition"
+      element={<ApiDefinitionContent entity={entity as ApiEntity} />}
+    />
+  </EntityPageLayout>
+);
+
+const UserOverviewContent = ({ entity }: { entity: UserEntity }) => (
+  <Grid container spacing={3}>
+    <Grid item xs={12} md={6}>
+      <UserProfileCard entity={entity} variant="gridItem" />
+    </Grid>
+    <Grid item xs={12} md={6}>
+      <OwnershipCard entity={entity} variant="gridItem" />
+    </Grid>
+  </Grid>
+);
+
+const UserEntityPage = ({ entity }: { entity: Entity }) => (
+  <EntityPageLayout>
+    <EntityPageLayout.Content
+      path="/*"
+      title="Overview"
+      element={<UserOverviewContent entity={entity as UserEntity} />}
+    />
+  </EntityPageLayout>
+);
+
+const GroupOverviewContent = ({ entity }: { entity: GroupEntity }) => (
+  <Grid container spacing={3}>
+    <Grid item xs={12} md={6}>
+      <GroupProfileCard entity={entity} variant="gridItem" />
+    </Grid>
+    <Grid item xs={12} md={6}>
+      <OwnershipCard entity={entity} variant="gridItem" />
+    </Grid>
+    <Grid item xs={12}>
+      <MembersListCard entity={entity} />
+    </Grid>
+  </Grid>
+);
+
+const GroupEntityPage = ({ entity }: { entity: Entity }) => (
+  <EntityPageLayout>
+    <EntityPageLayout.Content
+      path="/*"
+      title="Overview"
+      element={<GroupOverviewContent entity={entity as GroupEntity} />}
+    />
+  </EntityPageLayout>
+);
+
+const SystemOverviewContent = ({ entity }: { entity: SystemEntity }) => (
+  <Grid container spacing={3} alignItems="stretch">
+    <Grid item md={6}>
+      <AboutCard entity={entity} variant="gridItem" />
+    </Grid>
+    <Grid item md={6}>
+      <EntityHasComponentsCard variant="gridItem" />
+    </Grid>
+    <Grid item md={6}>
+      <EntityHasApisCard variant="gridItem" />
+    </Grid>
+  </Grid>
+);
+
+const SystemEntityPage = ({ entity }: { entity: Entity }) => (
+  <EntityPageLayout>
+    <EntityPageLayout.Content
+      path="/*"
+      title="Overview"
+      element={<SystemOverviewContent entity={entity as SystemEntity} />}
+    />
+  </EntityPageLayout>
+);
+
+const DomainOverviewContent = ({ entity }: { entity: DomainEntity }) => (
+  <Grid container spacing={3} alignItems="stretch">
+    <Grid item md={6}>
+      <AboutCard entity={entity} variant="gridItem" />
+    </Grid>
+    <Grid item md={6}>
+      <EntityHasSystemsCard variant="gridItem" />
+    </Grid>
+  </Grid>
+);
+
+const DomainEntityPage = ({ entity }: { entity: Entity }) => (
+  <EntityPageLayout>
+    <EntityPageLayout.Content
+      path="/*"
+      title="Overview"
+      element={<DomainOverviewContent entity={entity as DomainEntity} />}
+    />
+  </EntityPageLayout>
+);
+
+export const EntityPage = () => {
+  const { entity } = useEntity();
+
+  switch (entity?.kind?.toLocaleLowerCase('en-US')) {
+    case 'component':
+      return <ComponentEntityPage entity={entity} />;
+    case 'api':
+      return <ApiEntityPage entity={entity} />;
+    case 'group':
+      return <GroupEntityPage entity={entity} />;
+    case 'user':
+      return <UserEntityPage entity={entity} />;
+    case 'system':
+      return <SystemEntityPage entity={entity} />;
+    case 'domain':
+      return <DomainEntityPage entity={entity} />;
+    case 'location':
+    case 'resource':
+    case 'template':
+    default:
+      return <DefaultEntityPage entity={entity} />;
+  }
+};
diff --git a/packages/app/src/plugins.ts b/packages/app/src/plugins.ts
index 9eabff0..df53885 100644
--- a/packages/app/src/plugins.ts
+++ b/packages/app/src/plugins.ts
@@ -2,8 +2,8 @@ export { plugin as ApiDocs } from '@backstage/plugin-api-docs';
 export { plugin as CatalogPlugin } from '@backstage/plugin-catalog';
-export { plugin as RegisterComponent } from '@backstage/plugin-register-component';
+export { plugin as CatalogImport } from '@backstage/plugin-catalog-import';
+export { plugin as GithubActions } from '@backstage/plugin-github-actions';
 export { plugin as ScaffolderPlugin } from '@backstage/plugin-scaffolder';
 export { plugin as TechDocsPlugin } from '@backstage/plugin-techdocs';
-export { plugin as Circleci } from '@backstage/plugin-circleci';
-export { plugin as LighthousePlugin } from '@backstage/plugin-lighthouse';
 export { plugin as TechRadar } from '@backstage/plugin-tech-radar';
-export { plugin as GithubActions } from '@backstage/plugin-github-actions';
+export { plugin as UserSettings } from '@backstage/plugin-user-settings';
+
diff --git a/packages/app/src/sidebar.tsx b/packages/app/src/sidebar.tsx
deleted file mode 100644
index b5425b6..0000000
--- a/packages/app/src/sidebar.tsx
+++ /dev/null
@@ -1,76 +0,0 @@
-import React, { FC, useContext } from 'react';
-import HomeIcon from '@material-ui/icons/Home';
-import LibraryBooks from '@material-ui/icons/LibraryBooks';
-import ExtensionIcon from '@material-ui/icons/Extension';
-import CreateComponentIcon from '@material-ui/icons/AddCircleOutline';
-import BuildIcon from '@material-ui/icons/BuildRounded';
-import RuleIcon from '@material-ui/icons/AssignmentTurnedIn';
-import MapIcon from '@material-ui/icons/MyLocation';
-import { Link, makeStyles } from '@material-ui/core';
-import { NavLink } from 'react-router-dom';
-import LogoFull from './LogoFull';
-import LogoIcon from './LogoIcon';
-import { Settings as SidebarSettings } from '@backstage/plugin-user-settings';
-
-import {
-  Sidebar,
-  SidebarItem,
-  SidebarDivider,
-  sidebarConfig,
-  SidebarContext,
-  SidebarSpace,
-} from '@backstage/core';
-
-export const AppSidebar = () => (
-  <Sidebar>
-    <SidebarLogo />
-    <SidebarDivider />
-    {/* Global nav, not org-specific */}
-    <SidebarItem icon={HomeIcon} to="./" text="Home" />
-    <SidebarItem icon={ExtensionIcon} to="api-docs" text="APIs" />
-    <SidebarItem icon={LibraryBooks} to="/docs" text="Docs" />
-    <SidebarItem icon={CreateComponentIcon} to="create" text="Create..." />
-    <SidebarDivider />
-    <SidebarItem icon={MapIcon} to="tech-radar" text="Tech Radar" />
-    <SidebarItem icon={RuleIcon} to="lighthouse" text="Lighthouse" />
-    <SidebarItem icon={BuildIcon} to="circleci" text="CircleCI" />
-    {/* End global nav */}
-    <SidebarDivider />
-    <SidebarSpace />
-    <SidebarDivider />
-    <SidebarSettings />
-  </Sidebar>
-);
-
-const useSidebarLogoStyles = makeStyles({
-  root: {
-    width: sidebarConfig.drawerWidthClosed,
-    height: 3 * sidebarConfig.logoHeight,
-    display: 'flex',
-    flexFlow: 'row nowrap',
-    alignItems: 'center',
-    marginBottom: -14,
-  },
-  link: {
-    width: sidebarConfig.drawerWidthClosed,
-    marginLeft: 24,
-  },
-});
-
-const SidebarLogo: FC<{}> = () => {
-  const classes = useSidebarLogoStyles();
-  const { isOpen } = useContext(SidebarContext);
-
-  return (
-    <div className={classes.root}>
-      <Link
-        component={NavLink}
-        to="/"
-        underline="none"
-        className={classes.link}
-      >
-        {isOpen ? <LogoFull /> : <LogoIcon />}
-      </Link>
-    </div>
-  );
-};
diff --git a/packages/backend/Dockerfile b/packages/backend/Dockerfile
index 5051471..acef405 100644
--- a/packages/backend/Dockerfile
+++ b/packages/backend/Dockerfile
@@ -1,4 +1,15 @@
-FROM node:12-buster
+# This dockerfile builds an image for the backend package.
+# It should be executed with the root of the repo as docker context.
+#
+# Before building this image, be sure to have run the following commands in the repo root:
+#
+# yarn install
+# yarn tsc
+# yarn build
+#
+# Once the commands have been run, you can build the image using `yarn build-image`
 
-WORKDIR /usr/src/app
+FROM node:14-buster-slim
+
+WORKDIR /app
 
@@ -7,3 +18,3 @@ WORKDIR /usr/src/app
 # and along with yarn.lock and the root package.json, that's enough to run yarn install.
-ADD yarn.lock package.json skeleton.tar ./
+ADD yarn.lock package.json packages/backend/dist/skeleton.tar.gz ./
 
@@ -11,6 +22,5 @@ RUN yarn install --frozen-lockfile --production --network-timeout 300000 && rm -
 
-# This will copy the contents of the dist-workspace when running the build-image command.
-# Do not use this Dockerfile outside of that command, as it will copy in the source code instead.
-COPY . .
+# Then copy the rest of the backend bundle, along with any other files we might want.
+ADD packages/backend/dist/bundle.tar.gz app-config.yaml ./
 
-CMD ["node", "packages/backend", "--config", "app-config.yaml", "--config", "app-config.production.yaml"]
+CMD ["node", "packages/backend", "--config", "app-config.yaml"]
diff --git a/packages/backend/package.json b/packages/backend/package.json
index c8e3a09..caee9e9 100644
--- a/packages/backend/package.json
+++ b/packages/backend/package.json
@@ -10,4 +10,4 @@
   "scripts": {
-    "build": "backstage-cli backend:build",
-    "build-image": "backstage-cli backend:build-image --build --tag backstage",
+    "build": "backstage-cli backend:bundle",
+    "build-image": "docker build ../.. -f Dockerfile --tag backstage",
     "start": "backstage-cli backend:dev",
@@ -20,18 +20,19 @@
     "app": "0.0.0",
-    "@backstage/backend-common": "^0.3.3",
-    "@backstage/catalog-model": "^0.4.0",
-    "@backstage/config": "^0.1.1",
-    "@backstage/plugin-app-backend": "^0.3.2",
-    "@backstage/plugin-auth-backend": "^0.2.5",
-    "@backstage/plugin-catalog-backend": "^0.3.0",
-    "@backstage/plugin-proxy-backend": "^0.2.2",
-    "@backstage/plugin-scaffolder-backend": "^0.3.3",
-    "@backstage/plugin-techdocs-backend": "^0.3.1",
-    "@octokit/rest": "^18.0.0",
-    "@gitbeaker/node": "^25.2.0",
-    "dockerode": "^3.2.0",
+    "@backstage/backend-common": "^0.6.0",
+    "@backstage/catalog-model": "^0.7.4",
+    "@backstage/catalog-client": "^0.3.8",
+    "@backstage/config": "^0.1.4",
+    "@backstage/plugin-app-backend": "^0.3.10",
+    "@backstage/plugin-auth-backend": "^0.3.6",
+    "@backstage/plugin-catalog-backend": "^0.6.7",
+    "@backstage/plugin-proxy-backend": "^0.2.6",
+    "@backstage/plugin-scaffolder-backend": "^0.9.3",
+    "@backstage/plugin-techdocs-backend": "^0.7.0",
+    "@gitbeaker/node": "^28.0.2",
+    "@octokit/rest": "^18.0.12",
+    "dockerode": "^3.2.1",
     "express": "^4.17.1",
-    "express-promise-router": "^3.0.3",
+    "express-promise-router": "^4.1.0",
     "knex": "^0.21.6",
-    "sqlite3": "^4.2.0",
+    "sqlite3": "^5.0.0",
     "winston": "^3.2.1"
@@ -39,8 +40,10 @@
   "devDependencies": {
-    "@backstage/cli": "^0.4.0",
-    "@types/dockerode": "^2.5.32",
+    "@backstage/cli": "^0.6.6",
+    "@types/dockerode": "^3.2.1",
     "@types/express": "^4.17.6",
-    "@types/express-serve-static-core": "^4.17.5",
-    "@types/helmet": "^0.0.47"
-  }
+    "@types/express-serve-static-core": "^4.17.5"
+  },
+  "files": [
+    "dist"
+  ]
 }
diff --git a/packages/backend/src/plugins/app.ts b/packages/backend/src/plugins/app.ts
index 5131694..07fb04f 100644
--- a/packages/backend/src/plugins/app.ts
+++ b/packages/backend/src/plugins/app.ts
@@ -1,2 +1,3 @@
 import { createRouter } from '@backstage/plugin-app-backend';
+import { Router } from 'express';
 import { PluginEnvironment } from '../types';
@@ -6,3 +7,3 @@ export default async function createPlugin({
   config,
-}: PluginEnvironment) {
+}: PluginEnvironment): Promise<Router> {
   return await createRouter({
diff --git a/packages/backend/src/plugins/auth.ts b/packages/backend/src/plugins/auth.ts
index fe19855..5216510 100644
--- a/packages/backend/src/plugins/auth.ts
+++ b/packages/backend/src/plugins/auth.ts
@@ -1,2 +1,3 @@
 import { createRouter } from '@backstage/plugin-auth-backend';
+import { Router } from 'express';
 import { PluginEnvironment } from '../types';
@@ -8,3 +9,3 @@ export default async function createPlugin({
   discovery,
-}: PluginEnvironment) {
+}: PluginEnvironment): Promise<Router> {
   return await createRouter({ logger, config, database, discovery });
diff --git a/packages/backend/src/plugins/catalog.ts b/packages/backend/src/plugins/catalog.ts
index 10ac116..556b385 100644
--- a/packages/backend/src/plugins/catalog.ts
+++ b/packages/backend/src/plugins/catalog.ts
@@ -4,7 +4,8 @@ import {
   createRouter,
-  runPeriodically,
+  runPeriodically
 } from '@backstage/plugin-catalog-backend';
+import { Router } from 'express';
 import { PluginEnvironment } from '../types';
 
-export default async function createPlugin(env: PluginEnvironment) {
+export default async function createPlugin(env: PluginEnvironment): Promise<Router> {
   const builder = new CatalogBuilder(env);
@@ -14,2 +15,3 @@ export default async function createPlugin(env: PluginEnvironment) {
     higherOrderOperation,
+    locationAnalyzer,
   } = await builder.build();
@@ -25,2 +27,3 @@ export default async function createPlugin(env: PluginEnvironment) {
     higherOrderOperation,
+    locationAnalyzer,
     logger: env.logger,
diff --git a/packages/backend/src/plugins/proxy.ts b/packages/backend/src/plugins/proxy.ts
index 388d3fc..506f6d9 100644
--- a/packages/backend/src/plugins/proxy.ts
+++ b/packages/backend/src/plugins/proxy.ts
@@ -1,3 +1,3 @@
-// @ts-ignore
 import { createRouter } from '@backstage/plugin-proxy-backend';
+import { Router } from 'express';
 import { PluginEnvironment } from '../types';
@@ -8,3 +8,3 @@ export default async function createPlugin({
   discovery,
-}: PluginEnvironment) {
+}: PluginEnvironment): Promise<Router> {
   return await createRouter({ logger, config, discovery });
diff --git a/packages/backend/src/plugins/scaffolder.ts b/packages/backend/src/plugins/scaffolder.ts
index 2dc69fe..a3416c5 100644
--- a/packages/backend/src/plugins/scaffolder.ts
+++ b/packages/backend/src/plugins/scaffolder.ts
@@ -1,21 +1,14 @@
+import { SingleHostDiscovery } from '@backstage/backend-common';
+import { CatalogClient } from '@backstage/catalog-client';
 import {
   CookieCutter,
+  CreateReactAppTemplater,
   createRouter,
-  FilePreparer,
-  GithubPreparer,
-  GitlabPreparer,
   Preparers,
   Publishers,
-  GithubPublisher,
-  GitlabPublisher,
-  CreateReactAppTemplater,
-  Templaters,
-  RepoVisibilityOptions,
-  CatalogEntityClient,
+  Templaters
 } from '@backstage/plugin-scaffolder-backend';
-import { SingleHostDiscovery } from '@backstage/backend-common';
-import { Octokit } from '@octokit/rest';
-import { Gitlab } from '@gitbeaker/node';
-import type { PluginEnvironment } from '../types';
 import Docker from 'dockerode';
+import { Router } from 'express';
+import type { PluginEnvironment } from '../types';
 
@@ -24,3 +17,5 @@ export default async function createPlugin({
   config,
-}: PluginEnvironment) {
+  database,
+  reader,
+}: PluginEnvironment): Promise<Router> {
   const cookiecutterTemplater = new CookieCutter();
@@ -28,2 +23,3 @@ export default async function createPlugin({
   const templaters = new Templaters();
+
   templaters.register('cookiecutter', cookiecutterTemplater);
@@ -31,70 +27,4 @@ export default async function createPlugin({
 
-  const filePreparer = new FilePreparer();
-  const githubPreparer = new GithubPreparer();
-  const gitlabPreparer = new GitlabPreparer(config);
-  const preparers = new Preparers();
-
-  preparers.register('file', filePreparer);
-  preparers.register('github', githubPreparer);
-  preparers.register('gitlab', gitlabPreparer);
-  preparers.register('gitlab/api', gitlabPreparer);
-
-  const publishers = new Publishers();
-
-  const githubConfig = config.getOptionalConfig('scaffolder.github');
-
-  if (githubConfig) {
-    try {
-      const repoVisibility = githubConfig.getString(
-        'visibility',
-      ) as RepoVisibilityOptions;
-
-      const githubToken = githubConfig.getString('token');
-      const githubHost = githubConfig.getOptionalString('host');
-      const githubClient = new Octokit({ auth: githubToken, baseUrl: githubHost });
-      const githubPublisher = new GithubPublisher({
-        client: githubClient,
-        token: githubToken,
-        repoVisibility,
-      });
-      publishers.register('file', githubPublisher);
-      publishers.register('github', githubPublisher);
-    } catch (e) {
-      const providerName = 'github';
-      if (process.env.NODE_ENV !== 'development') {
-        throw new Error(
-          `Failed to initialize ${providerName} scaffolding provider, ${e.message}`,
-        );
-      }
-
-      logger.warn(
-        `Skipping ${providerName} scaffolding provider, ${e.message}`,
-      );
-    }
-  }
-
-  const gitLabConfig = config.getOptionalConfig('scaffolder.gitlab.api');
-  if (gitLabConfig) {
-    try {
-      const gitLabToken = gitLabConfig.getString('token');
-      const gitLabClient = new Gitlab({
-        host: gitLabConfig.getOptionalString('baseUrl'),
-        token: gitLabToken,
-      });
-      const gitLabPublisher = new GitlabPublisher(gitLabClient, gitLabToken);
-      publishers.register('gitlab', gitLabPublisher);
-      publishers.register('gitlab/api', gitLabPublisher);
-    } catch (e) {
-      const providerName = 'gitlab';
-      if (process.env.NODE_ENV !== 'development') {
-        throw new Error(
-          `Failed to initialize ${providerName} scaffolding provider, ${e.message}`,
-        );
-      }
-
-      logger.warn(
-        `Skipping ${providerName} scaffolding provider, ${e.message}`,
-      );
-    }
-  }
+  const preparers = await Preparers.fromConfig(config, { logger });
+  const publishers = await Publishers.fromConfig(config, { logger });
 
@@ -103,3 +33,3 @@ export default async function createPlugin({
   const discovery = SingleHostDiscovery.fromConfig(config);
-  const entityClient = new CatalogEntityClient({ discovery });
+  const catalogClient = new CatalogClient({ discoveryApi: discovery });
 
@@ -112,3 +42,5 @@ export default async function createPlugin({
     dockerClient,
-    entityClient,
+    database,
+    catalogClient,
+    reader
   });
diff --git a/packages/backend/src/plugins/techdocs.ts b/packages/backend/src/plugins/techdocs.ts
index ac4d81a..0ba08ce 100644
--- a/packages/backend/src/plugins/techdocs.ts
+++ b/packages/backend/src/plugins/techdocs.ts
@@ -2,11 +2,10 @@ import {
   createRouter,
-  DirectoryPreparer,
-  CommonGitPreparer,
-  Preparers,
-  Generators,
-  LocalPublish,
-  TechdocsGenerator,
+
+  Generators, Preparers,
+
+  Publisher
 } from '@backstage/plugin-techdocs-backend';
-import { PluginEnvironment } from '../types';
 import Docker from 'dockerode';
+import { Router } from 'express';
+import { PluginEnvironment } from '../types';
 
@@ -16,18 +15,24 @@ export default async function createPlugin({
   discovery,
-}: PluginEnvironment) {
-  const generators = new Generators();
-  const techdocsGenerator = new TechdocsGenerator(logger, config);
-
-  generators.register('techdocs', techdocsGenerator);
-
-  const preparers = new Preparers();
-  const directoryPreparer = new DirectoryPreparer(logger);
-  const commonGitPreparer = new CommonGitPreparer(logger);
+  reader,
+}: PluginEnvironment): Promise<Router> {
+  // Preparers are responsible for fetching source files for documentation.
+  const preparers = await Preparers.fromConfig(config, {
+    logger,
+    reader,
+  });
 
-  preparers.register('dir', directoryPreparer);
-  preparers.register('github', commonGitPreparer);
-  preparers.register('gitlab', commonGitPreparer);
+  // Generators are used for generating documentation sites.
+  const generators = await Generators.fromConfig(config, {
+    logger,
+  });
 
-  const publisher = new LocalPublish(logger, discovery);
+  // Publisher is used for
+  // 1. Publishing generated files to storage
+  // 2. Fetching files from storage and passing them to TechDocs frontend.
+  const publisher = await Publisher.fromConfig(config, {
+    logger,
+    discovery,
+  });
 
+  // Docker client (conditionally) used by the generators, based on techdocs.generators config.
   const dockerClient = new Docker();
diff --git a/releases.json b/releases.json
deleted file mode 100644
index 5518dc3..0000000
--- a/releases.json
+++ /dev/null
@@ -1,5 +0,0 @@
-{
-  "0.1.1": {},
-  "0.2.0": {},
-  "0.2.1": {}
-}
