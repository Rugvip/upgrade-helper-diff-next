diff --git a/.gitignore b/.gitignore
index 4adebc5..d16a8d3 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1 +1,4 @@
+# macOS
+.DS_Store
+
 # Logs
diff --git a/app-config.yaml b/app-config.yaml
index 6c3df07..03c75b8 100644
--- a/app-config.yaml
+++ b/app-config.yaml
@@ -13,2 +13,4 @@ backend:
     connect-src: ["'self'", 'http:', 'https:']
+    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
+    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
   cors:
@@ -91,6 +93,2 @@ catalog:
         - allow: [Template]
-    - type: url
-      target: https://github.com/backstage/backstage/blob/master/plugins/scaffolder-backend/sample-templates/create-react-app/template.yaml
-      rules:
-        - allow: [Template]
     - type: url
diff --git a/package.json b/package.json
index 51c6d41..6c32c7c 100644
--- a/package.json
+++ b/package.json
@@ -35,3 +35,3 @@
   "devDependencies": {
-    "@backstage/cli": "^0.6.14",
+    "@backstage/cli": "^0.7.2",
     "@spotify/prettier-config": "^7.0.0",
diff --git a/packages/app/package.json b/packages/app/package.json
index 854dd4f..5617611 100644
--- a/packages/app/package.json
+++ b/packages/app/package.json
@@ -6,18 +6,20 @@
   "dependencies": {
-    "@backstage/catalog-model": "^0.8.1",
-    "@backstage/cli": "^0.6.14",
-    "@backstage/core": "^0.7.12",
-    "@backstage/integration-react": "^0.1.2",
-    "@backstage/plugin-api-docs": "^0.4.15",
-    "@backstage/plugin-catalog": "^0.6.1",
-    "@backstage/plugin-catalog-import": "^0.5.8",
-    "@backstage/plugin-catalog-react": "^0.2.1",
-    "@backstage/plugin-github-actions": "^0.4.8",
-    "@backstage/plugin-org": "^0.3.14",
-    "@backstage/plugin-scaffolder": "^0.9.7",
-    "@backstage/plugin-search": "^0.3.7",
-    "@backstage/plugin-tech-radar": "^0.4.0",
-    "@backstage/plugin-techdocs": "^0.9.5",
-    "@backstage/plugin-user-settings": "^0.2.10",
-    "@backstage/test-utils": "^0.1.13",
+    "@backstage/catalog-model": "^0.8.4",
+    "@backstage/cli": "^0.7.2",
+    "@backstage/core-app-api": "^0.1.3",
+    "@backstage/core-components": "^0.1.3",
+    "@backstage/core-plugin-api": "^0.1.3",
+    "@backstage/integration-react": "^0.1.4",
+    "@backstage/plugin-api-docs": "^0.6.0",
+    "@backstage/plugin-catalog": "^0.6.4",
+    "@backstage/plugin-catalog-import": "^0.5.11",
+    "@backstage/plugin-catalog-react": "^0.2.4",
+    "@backstage/plugin-github-actions": "^0.4.10",
+    "@backstage/plugin-org": "^0.3.15",
+    "@backstage/plugin-scaffolder": "^0.9.9",
+    "@backstage/plugin-search": "^0.4.1",
+    "@backstage/plugin-tech-radar": "^0.4.1",
+    "@backstage/plugin-techdocs": "^0.9.7",
+    "@backstage/plugin-user-settings": "^0.2.12",
+    "@backstage/test-utils": "^0.1.14",
     "@backstage/theme": "^0.2.8",
diff --git a/packages/app/src/App.tsx b/packages/app/src/App.tsx
index 07d030b..c513c7e 100644
--- a/packages/app/src/App.tsx
+++ b/packages/app/src/App.tsx
@@ -2,8 +2,2 @@ import React from 'react';
 import { Navigate, Route } from 'react-router';
-import {
-  AlertDisplay,
-  createApp,
-  FlatRoutes,
-  OAuthRequestDialog,
-} from '@backstage/core';
 import { apiDocsPlugin, ApiExplorerPage } from '@backstage/plugin-api-docs';
@@ -27,2 +21,5 @@ import { Root } from './components/Root';
 
+import { AlertDisplay, OAuthRequestDialog } from '@backstage/core-components';
+import { createApp, FlatRoutes } from '@backstage/core-app-api';
+
 const app = createApp({
diff --git a/packages/app/src/apis.ts b/packages/app/src/apis.ts
index d803416..080b20f 100644
--- a/packages/app/src/apis.ts
+++ b/packages/app/src/apis.ts
@@ -1,4 +1 @@
-import {
-  AnyApiFactory, configApiRef, createApiFactory
-} from '@backstage/core';
 import {
@@ -6,2 +3,3 @@ import {
 } from '@backstage/integration-react';
+import { AnyApiFactory, configApiRef, createApiFactory } from '@backstage/core-plugin-api';
 
diff --git a/packages/app/src/components/Root/LogoFull.tsx b/packages/app/src/components/Root/LogoFull.tsx
index 2fb7674..c7b1c84 100644
--- a/packages/app/src/components/Root/LogoFull.tsx
+++ b/packages/app/src/components/Root/LogoFull.tsx
@@ -1,3 +1,3 @@
 /*
- * Copyright 2020 Spotify AB
+ * Copyright 2020 The Backstage Authors
  *
diff --git a/packages/app/src/components/Root/LogoIcon.tsx b/packages/app/src/components/Root/LogoIcon.tsx
index 507e47d..073cf6e 100644
--- a/packages/app/src/components/Root/LogoIcon.tsx
+++ b/packages/app/src/components/Root/LogoIcon.tsx
@@ -1,3 +1,3 @@
 /*
- * Copyright 2020 Spotify AB
+ * Copyright 2020 The Backstage Authors
  *
diff --git a/packages/app/src/components/Root/Root.tsx b/packages/app/src/components/Root/Root.tsx
index 9c07e0c..5e5a71a 100644
--- a/packages/app/src/components/Root/Root.tsx
+++ b/packages/app/src/components/Root/Root.tsx
@@ -1,3 +1,3 @@
 /*
- * Copyright 2020 Spotify AB
+ * Copyright 2020 The Backstage Authors
  *
@@ -25,2 +25,5 @@ import LogoFull from './LogoFull';
 import LogoIcon from './LogoIcon';
+import { NavLink } from 'react-router-dom';
+import { Settings as SidebarSettings } from '@backstage/plugin-user-settings';
+import { SidebarSearch } from '@backstage/plugin-search';
 import {
@@ -33,6 +36,3 @@ import {
   SidebarSpace,
-} from '@backstage/core';
-import { NavLink } from 'react-router-dom';
-import { Settings as SidebarSettings } from '@backstage/plugin-user-settings';
-import { SidebarSearch } from '@backstage/plugin-search';
+} from '@backstage/core-components';
 
diff --git a/packages/app/src/components/Root/index.ts b/packages/app/src/components/Root/index.ts
index ab65cb2..dff706f 100644
--- a/packages/app/src/components/Root/index.ts
+++ b/packages/app/src/components/Root/index.ts
@@ -1,3 +1,3 @@
 /*
- * Copyright 2020 Spotify AB
+ * Copyright 2020 The Backstage Authors
  *
diff --git a/packages/app/src/components/catalog/EntityPage.tsx b/packages/app/src/components/catalog/EntityPage.tsx
index 4f67dda..e3dd5be 100644
--- a/packages/app/src/components/catalog/EntityPage.tsx
+++ b/packages/app/src/components/catalog/EntityPage.tsx
@@ -1,3 +1,3 @@
 /*
- * Copyright 2020 Spotify AB
+ * Copyright 2020 The Backstage Authors
  *
@@ -17,3 +17,2 @@ import React from 'react';
 import { Button, Grid } from '@material-ui/core';
-import { EmptyState } from '@backstage/core';
 import {
@@ -52,2 +51,3 @@ import {
 import { EntityTechdocsContent } from '@backstage/plugin-techdocs';
+import { EmptyState } from '@backstage/core-components';
 
diff --git a/packages/app/src/components/search/SearchPage.tsx b/packages/app/src/components/search/SearchPage.tsx
new file mode 100644
index 0000000..7b3c2b2
--- /dev/null
+++ b/packages/app/src/components/search/SearchPage.tsx
@@ -0,0 +1,86 @@
+import React from 'react';
+import { makeStyles, Theme, Grid, List, Paper } from '@material-ui/core';
+
+import { CatalogResultListItem } from '@backstage/plugin-catalog';
+import {
+  SearchBar,
+  SearchFilter,
+  SearchResult,
+  DefaultResultListItem,
+} from '@backstage/plugin-search';
+import { Content, Header, Page } from '@backstage/core-components';
+
+const useStyles = makeStyles((theme: Theme) => ({
+  bar: {
+    padding: theme.spacing(1, 0),
+  },
+  filters: {
+    padding: theme.spacing(2),
+  },
+  filter: {
+    '& + &': {
+      marginTop: theme.spacing(2.5),
+    },
+  },
+}));
+
+const SearchPage = () => {
+  const classes = useStyles();
+
+  return (
+    <Page themeId="home">
+      <Header title="Search" />
+      <Content>
+        <Grid container direction="row">
+          <Grid item xs={12}>
+            <Paper className={classes.bar}>
+              <SearchBar debounceTime={100} />
+            </Paper>
+          </Grid>
+          <Grid item xs={3}>
+            <Paper className={classes.filters}>
+              <SearchFilter.Select
+                className={classes.filter}
+                name="kind"
+                values={['Component', 'Template']}
+              />
+              <SearchFilter.Checkbox
+                className={classes.filter}
+                name="lifecycle"
+                values={['experimental', 'production']}
+              />
+            </Paper>
+          </Grid>
+          <Grid item xs={9}>
+            <SearchResult>
+              {({ results }) => (
+                <List>
+                  {results.map(({ type, document }) => {
+                    switch (type) {
+                      case 'software-catalog':
+                        return (
+                          <CatalogResultListItem
+                            key={document.location}
+                            result={document}
+                          />
+                        );
+                      default:
+                        return (
+                          <DefaultResultListItem
+                            key={document.location}
+                            result={document}
+                          />
+                        );
+                    }
+                  })}
+                </List>
+              )}
+            </SearchResult>
+          </Grid>
+        </Grid>
+      </Content>
+    </Page>
+  );
+};
+
+export const searchPage = <SearchPage />;
diff --git a/packages/backend/package.json b/packages/backend/package.json
index 9a53707..f59f8e2 100644
--- a/packages/backend/package.json
+++ b/packages/backend/package.json
@@ -20,13 +20,15 @@
     "app": "0.0.0",
-    "@backstage/backend-common": "^0.8.1",
-    "@backstage/catalog-model": "^0.8.1",
-    "@backstage/catalog-client": "^0.3.12",
+    "@backstage/backend-common": "^0.8.3",
+    "@backstage/catalog-model": "^0.8.4",
+    "@backstage/catalog-client": "^0.3.14",
     "@backstage/config": "^0.1.5",
-    "@backstage/plugin-app-backend": "^0.3.13",
-    "@backstage/plugin-auth-backend": "^0.3.12",
-    "@backstage/plugin-catalog-backend": "^0.10.1",
-    "@backstage/plugin-proxy-backend": "^0.2.8",
-    "@backstage/plugin-scaffolder-backend": "^0.11.5",
-    "@backstage/plugin-techdocs-backend": "^0.8.2",
-    "@gitbeaker/node": "^29.2.0",
+    "@backstage/plugin-app-backend": "^0.3.14",
+    "@backstage/plugin-auth-backend": "^0.3.14",
+    "@backstage/plugin-catalog-backend": "^0.10.4",
+    "@backstage/plugin-proxy-backend": "^0.2.11",
+    "@backstage/plugin-scaffolder-backend": "^0.12.3",
+    "@backstage/plugin-search-backend": "^0.2.1",
+    "@backstage/plugin-search-backend-node": "^0.2.2",
+    "@backstage/plugin-techdocs-backend": "^0.8.4",
+    "@gitbeaker/node": "^30.2.0",
     "@octokit/rest": "^18.5.3",
@@ -40,3 +42,3 @@
   "devDependencies": {
-    "@backstage/cli": "^0.6.14",
+    "@backstage/cli": "^0.7.2",
     "@types/dockerode": "^3.2.1",
diff --git a/packages/backend/src/index.ts b/packages/backend/src/index.ts
index aebd034..f2b14b2 100644
--- a/packages/backend/src/index.ts
+++ b/packages/backend/src/index.ts
@@ -16,3 +16,3 @@ import {
   CacheManager,
-  SingleConnectionDatabaseManager,
+  DatabaseManager,
   SingleHostDiscovery,
@@ -27,2 +27,3 @@ import proxy from './plugins/proxy';
 import techdocs from './plugins/techdocs';
+import search from './plugins/search';
 import { PluginEnvironment } from './types';
@@ -36,4 +37,4 @@ function makeCreateEnv(config: Config) {
 
-  const databaseManager = SingleConnectionDatabaseManager.fromConfig(config);
   const cacheManager = CacheManager.fromConfig(config);
+  const databaseManager = DatabaseManager.fromConfig(config);
 
@@ -59,2 +60,3 @@ async function main() {
   const techdocsEnv = useHotMemoize(module, () => createEnv('techdocs'));
+  const searchEnv = useHotMemoize(module, () => createEnv('search'));
   const appEnv = useHotMemoize(module, () => createEnv('app'));
@@ -67,2 +69,3 @@ async function main() {
   apiRouter.use('/proxy', await proxy(proxyEnv));
+  apiRouter.use('/search', await search(searchEnv));
   apiRouter.use(notFoundHandler());
diff --git a/packages/backend/src/plugins/catalog.ts b/packages/backend/src/plugins/catalog.ts
index 838228c..a132f0a 100644
--- a/packages/backend/src/plugins/catalog.ts
+++ b/packages/backend/src/plugins/catalog.ts
@@ -1,6 +1,4 @@
-import { useHotCleanup } from '@backstage/backend-common';
 import {
   CatalogBuilder,
-  createRouter,
-  runPeriodically
+  createRouter
 } from '@backstage/plugin-catalog-backend';
@@ -10,3 +8,3 @@ import { PluginEnvironment } from '../types';
 export default async function createPlugin(env: PluginEnvironment): Promise<Router> {
-  const builder = new CatalogBuilder(env);
+  const builder = await CatalogBuilder.create(env);
   const {
@@ -14,3 +12,4 @@ export default async function createPlugin(env: PluginEnvironment): Promise<Rout
     locationsCatalog,
-    higherOrderOperation,
+    locationService,
+    processingEngine,
     locationAnalyzer,
@@ -18,6 +17,3 @@ export default async function createPlugin(env: PluginEnvironment): Promise<Rout
 
-  useHotCleanup(
-    module,
-    runPeriodically(() => higherOrderOperation.refreshAllLocations(), 100000),
-  );
+  await processingEngine.start();
 
@@ -26,3 +22,3 @@ export default async function createPlugin(env: PluginEnvironment): Promise<Rout
     locationsCatalog,
-    higherOrderOperation,
+    locationService,
     locationAnalyzer,
diff --git a/packages/backend/src/plugins/search.ts b/packages/backend/src/plugins/search.ts
new file mode 100644
index 0000000..248ed37
--- /dev/null
+++ b/packages/backend/src/plugins/search.ts
@@ -0,0 +1,38 @@
+import { useHotCleanup } from '@backstage/backend-common';
+import { createRouter } from '@backstage/plugin-search-backend';
+import {
+  IndexBuilder,
+  LunrSearchEngine,
+} from '@backstage/plugin-search-backend-node';
+import { PluginEnvironment } from '../types';
+import { DefaultCatalogCollator } from '@backstage/plugin-catalog-backend';
+
+export default async function createPlugin({
+  logger,
+  discovery,
+}: PluginEnvironment) {
+  // Initialize a connection to a search engine.
+  const searchEngine = new LunrSearchEngine({ logger });
+  const indexBuilder = new IndexBuilder({ logger, searchEngine });
+
+  // Collators are responsible for gathering documents known to plugins. This
+  // particular collator gathers entities from the software catalog.
+  indexBuilder.addCollator({
+    defaultRefreshIntervalSeconds: 600,
+    collator: new DefaultCatalogCollator({ discovery }),
+  });
+
+  // The scheduler controls when documents are gathered from collators and sent
+  // to the search engine for indexing.
+  const { scheduler } = await indexBuilder.build();
+
+  // A 3 second delay gives the backend server a chance to initialize before
+  // any collators are executed, which may attempt requests against the API.
+  setTimeout(() => scheduler.start(), 3000);
+  useHotCleanup(module, () => scheduler.stop());
+
+  return await createRouter({
+    engine: indexBuilder.getSearchEngine(),
+    logger,
+  });
+}
