diff --git a/app-config.yaml b/app-config.yaml
index aac1eb1..2999615 100644
--- a/app-config.yaml
+++ b/app-config.yaml
@@ -8,2 +8,7 @@ organization:
 backend:
+  # Used for enabling authentication, secret is shared by all backend plugins
+  # See backend-to-backend-auth.md in the docs for information on the format
+  # auth:
+  #   keys:
+  #     - secret: ${BACKEND_SECRET}
   baseUrl: http://localhost:7007
diff --git a/backstage.json b/backstage.json
index 77e9232..1062ff8 100644
--- a/backstage.json
+++ b/backstage.json
@@ -1,3 +1,3 @@
 {
-  "version": "0.4.5"
+  "version": "0.4.6"
 }
diff --git a/package.json b/package.json
index 869d117..95de0a0 100644
--- a/package.json
+++ b/package.json
@@ -32,3 +32,3 @@
   "devDependencies": {
-    "@backstage/cli": "^0.9.1",
+    "@backstage/cli": "^0.10.0",
     "@spotify/prettier-config": "^11.0.0",
diff --git a/packages/app/package.json b/packages/app/package.json
index 6d87eb0..9f1021a 100644
--- a/packages/app/package.json
+++ b/packages/app/package.json
@@ -8,8 +8,8 @@
     "@backstage/catalog-model": "^0.9.7",
-    "@backstage/cli": "^0.9.1",
-    "@backstage/core-app-api": "^0.1.23",
-    "@backstage/core-components": "^0.7.5",
-    "@backstage/core-plugin-api": "^0.2.1",
+    "@backstage/cli": "^0.10.0",
+    "@backstage/core-app-api": "^0.1.24",
+    "@backstage/core-components": "^0.7.6",
+    "@backstage/core-plugin-api": "^0.2.2",
     "@backstage/integration-react": "^0.1.14",
-    "@backstage/plugin-api-docs": "^0.6.15",
+    "@backstage/plugin-api-docs": "^0.6.16",
     "@backstage/plugin-catalog": "^0.7.3",
@@ -19,9 +19,9 @@
     "@backstage/plugin-org": "^0.3.29",
-    "@backstage/plugin-scaffolder": "^0.11.12",
-    "@backstage/plugin-search": "^0.4.18",
+    "@backstage/plugin-scaffolder": "^0.11.13",
+    "@backstage/plugin-search": "^0.5.0",
     "@backstage/plugin-tech-radar": "^0.4.12",
-    "@backstage/plugin-techdocs": "^0.12.7",
-    "@backstage/plugin-user-settings": "^0.3.11",
+    "@backstage/plugin-techdocs": "^0.12.8",
+    "@backstage/plugin-user-settings": "^0.3.12",
     "@backstage/test-utils": "^0.1.23",
-    "@backstage/theme": "^0.2.13",
+    "@backstage/theme": "^0.2.14",
     "@material-ui/core": "^4.12.2",
diff --git a/packages/app/src/components/Root/Root.tsx b/packages/app/src/components/Root/Root.tsx
index ec59b0b..b4fa04f 100644
--- a/packages/app/src/components/Root/Root.tsx
+++ b/packages/app/src/components/Root/Root.tsx
@@ -27,3 +27,6 @@ import { NavLink } from 'react-router-dom';
 import { Settings as SidebarSettings } from '@backstage/plugin-user-settings';
-import { SidebarSearchModal } from '@backstage/plugin-search';
+import {
+  SidebarSearchModal,
+  SearchContextProvider,
+} from '@backstage/plugin-search';
 import {
@@ -76,3 +79,5 @@ export const Root = ({ children }: PropsWithChildren<{}>) => (
       <SidebarLogo />
-      <SidebarSearchModal />
+      <SearchContextProvider>
+        <SidebarSearchModal />
+      </SearchContextProvider>
       <SidebarDivider />
diff --git a/packages/backend/package.json b/packages/backend/package.json
index f5c3b2e..e908e1e 100644
--- a/packages/backend/package.json
+++ b/packages/backend/package.json
@@ -17,3 +17,3 @@
     "app": "0.0.0",
-    "@backstage/backend-common": "^0.9.11",
+    "@backstage/backend-common": "^0.9.12",
     "@backstage/catalog-model": "^0.9.7",
@@ -22,9 +22,9 @@
     "@backstage/plugin-app-backend": "^0.3.19",
-    "@backstage/plugin-auth-backend": "^0.4.9",
-    "@backstage/plugin-catalog-backend": "^0.18.0",
+    "@backstage/plugin-auth-backend": "^0.4.10",
+    "@backstage/plugin-catalog-backend": "^0.19.0",
     "@backstage/plugin-proxy-backend": "^0.2.14",
-    "@backstage/plugin-scaffolder-backend": "^0.15.14",
+    "@backstage/plugin-scaffolder-backend": "^0.15.15",
     "@backstage/plugin-search-backend": "^0.2.7",
     "@backstage/plugin-search-backend-node": "^0.4.3",
-    "@backstage/plugin-techdocs-backend": "^0.10.9",
+    "@backstage/plugin-techdocs-backend": "^0.11.0",
     "@gitbeaker/node": "^34.6.0",
@@ -39,3 +39,3 @@
   "devDependencies": {
-    "@backstage/cli": "^0.9.1",
+    "@backstage/cli": "^0.10.0",
     "@types/dockerode": "^3.3.0",
diff --git a/packages/backend/src/index.ts b/packages/backend/src/index.ts
index f2b14b2..3f12122 100644
--- a/packages/backend/src/index.ts
+++ b/packages/backend/src/index.ts
@@ -19,2 +19,3 @@ import {
   UrlReaders,
+  ServerTokenManager,
 } from '@backstage/backend-common';
@@ -39,2 +40,3 @@ function makeCreateEnv(config: Config) {
   const databaseManager = DatabaseManager.fromConfig(config);
+  const tokenManager = ServerTokenManager.noop();
 
@@ -44,3 +46,3 @@ function makeCreateEnv(config: Config) {
     const cache = cacheManager.forPlugin(plugin);
-    return { logger, database, cache, config, reader, discovery };
+    return { logger, database, cache, config, reader, discovery, tokenManager };
   };
diff --git a/packages/backend/src/plugins/search.ts b/packages/backend/src/plugins/search.ts
index 63e1962..f23b0c7 100644
--- a/packages/backend/src/plugins/search.ts
+++ b/packages/backend/src/plugins/search.ts
@@ -14,2 +14,3 @@ export default async function createPlugin({
   config,
+  tokenManager,
 }: PluginEnvironment) {
@@ -23,3 +24,6 @@ export default async function createPlugin({
     defaultRefreshIntervalSeconds: 600,
-    collator: DefaultCatalogCollator.fromConfig(config, { discovery }),
+    collator: DefaultCatalogCollator.fromConfig(config, {
+      discovery,
+      tokenManager,
+    }),
   });
@@ -29,3 +33,7 @@ export default async function createPlugin({
     defaultRefreshIntervalSeconds: 600,
-    collator: DefaultTechDocsCollator.fromConfig(config, { discovery, logger }),
+    collator: DefaultTechDocsCollator.fromConfig(config, {
+      discovery,
+      logger,
+      tokenManager,
+    }),
   });
diff --git a/packages/backend/src/types.ts b/packages/backend/src/types.ts
index 6c78a2a..b1e2e0a 100644
--- a/packages/backend/src/types.ts
+++ b/packages/backend/src/types.ts
@@ -6,2 +6,3 @@ import {
   PluginEndpointDiscovery,
+  TokenManager,
   UrlReader,
@@ -16,2 +17,3 @@ export type PluginEnvironment = {
   discovery: PluginEndpointDiscovery;
+  tokenManager: TokenManager;
 };
